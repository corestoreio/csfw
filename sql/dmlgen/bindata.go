// Code generated by go-bindata. DO NOT EDIT.
// sources:
// _tpl/10_tables.go.tpl
// _tpl/20_entity.go.tpl
// _tpl/30_collection_methods.go.tpl
// _tpl/40_binary.go.tpl
// _tpl/90_test.go.tpl
// _tpl/fbs_10_header.go.tpl
// _tpl/fbs_20_message.go.tpl
// _tpl/protobuf_10_header.go.tpl
// _tpl/protobuf_20_message.go.tpl

package dmlgen


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTpl10tablesgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\xc1\x8e\xda\x30\x14\x3c\xdb\x5f\x31\x8d\x7a\x48\xaa\xd4\xdc\xa9" +
	"\x72\x68\xa9\xd4\x4b\xa1\xaa\xa8\xd4\xb3\x49\x5e\x82\xb5\x89\x1d\xd9\x8f\x5d\x50\xe4\x7f\x5f\x39\x61\x81\x1b\x27" +
	"\xfb\xcd\x1b\xcd\xcc\xd3\xd4\xce\x06\x46\x2e\xa7\xe9\x2b\xbc\xb6\x1d\xe1\x33\xeb\x43\x4f\x58\x57\x50\xff\xd2\x2f" +
	"\x20\x46\x29\xe6\xef\x4e\x0f\x34\x4d\xbf\xdc\x46\x0f\xd4\x5f\xd7\x09\x8b\x11\x15\xb2\x69\x7a\x44\xb2\x59\x92\x6c" +
	"\x13\xa3\x2c\xa4\x5c\xad\xb0\xa3\xb7\xab\xa0\x27\x3e\x79\x1b\xa0\xd1\x39\xd3\x1a\x6a\xf0\x4a\x3e\x18\x67\xe1\x5a" +
	"\xf0\x91\xb0\xbd\xec\xff\xfe\x5e\x6d\xb5\x37\xfa\xe7\x0f\x2c\x81\x42\x7d\xa4\x41\xa3\x75\x3e\x51\x92\xe0\x8c\x87" +
	"\x35\x1e\x8d\x43\x8c\x69\xf5\xfd\xc4\x0e\x1d\x59\xf2\x9a\xa9\xc1\xe1\x82\x66\xe8\x3b\xb2\x4a\xb6\x27\x5b\xdf\xa3" +
	"\xe4\x35\x9f\x51\x3b\xcb\x74\x66\xb5\x59\xde\x12\x6e\xe4\x00\xa5\x54\xd3\xf4\x8b\xf2\x9f\x91\x8d\xb3\x05\x72\x1e" +
	"\xf0\xe5\x86\x86\x92\xbc\x07\x79\xef\x7c\x81\x49\x0a\xd3\x82\x87\x32\x01\xa8\x90\x58\x77\x1b\x29\x84\x1e\x47\xb2" +
	"\x4d\x9e\xb4\x4b\x29\x84\x48\x84\xff\x86\x8f\x1b\x4f\x9a\x69\xe6\xa5\x34\x25\x9e\x55\x21\x04\x9e\xb4\x51\x22\xcb" +
	"\x66\x8f\x5b\x05\x45\x1a\x0b\xa5\x94\x14\xc5\xb7\x39\xe1\xa7\x0a\xd6\xf4\x29\xb6\x58\xea\x48\x63\xb9\x5c\x13\xe6" +
	"\x60\x7b\xd6\xf5\x4b\x4e\xde\x17\x52\x44\xf9\xc1\x4a\x17\x5a\xd3\xcb\x28\xdf\x03\x00\x00\xff\xff\x8d\x00\xf2\x86" +
	"\x3b\x02\x00\x00")

func bindataTpl10tablesgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl10tablesgotpl,
		"_tpl/10_tables.go.tpl",
	)
}



func bindataTpl10tablesgotpl() (*asset, error) {
	bytes, err := bindataTpl10tablesgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/10_tables.go.tpl",
		size: 571,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl20entitygotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x6d\x6f\xdb\xc8\x11\xfe\x4c\xfe\x8a\x39\xe1\xee\x4a\xfa\xa4\x55" +
	"\x0a\xb4\xfd\x60\xc3\x05\x72\x71\x92\xaa\x6d\x7c\x41\xec\x43\x3f\x18\x46\xbd\x26\x87\xd2\xc6\xcb\x5d\x66\x77\x69" +
	"\x45\x47\xf0\xbf\x17\xb3\x4b\x4a\xa2\x5e\xec\xbc\xa0\x01\x62\x5b\xe2\xee\xbc\x3e\x33\xf3\x0c\xa7\x53\x68\x1a\xf6" +
	"\x5a\x39\xe1\x56\x6d\x0b\x06\x2b\x83\x16\x95\xb3\xc0\xc1\x0a\x35\x97\x08\x46\x2f\xa1\xd0\x06\x2e\x7e\x05\xc7\xef" +
	"\x25\xc2\x5d\xd3\xb0\x6b\xfa\xeb\x92\x97\xd8\xb6\x77\x2c\x9e\x4e\xe1\x65\xed\x34\xcc\x51\xa1\xe1\x0e\x73\xd6\x34" +
	"\x4b\xe1\x16\xc0\x5e\xe9\xb2\x44\xe5\xda\x36\x6e\x1a\x06\x93\xb6\x6d\x1a\x54\x39\xfd\x9a\x80\x28\x80\xfd\x83\xdb" +
	"\xd7\xdc\xae\xfe\x69\xb5\x7a\xc7\x8d\x5d\x70\x89\x06\xda\x36\x9e\x4e\x91\xdb\xd5\x47\xab\xd5\x29\xfd\xe8\x6e\xc5" +
	"\x6e\x55\xe1\xc0\x60\xeb\x4c\x9d\x39\x68\xe2\xa6\x31\x5c\xcd\x91\x34\xca\xba\x54\x96\x54\xbc\xd5\xaf\x78\x89\xf2" +
	"\x1d\x5f\xdd\xe3\x7b\x23\x1e\xb9\x43\x60\x6f\x04\xca\xbc\x6d\x81\x1e\x5f\xaf\x2a\xbc\xac\xa5\x04\xd6\xb6\x71\x14" +
	"\x75\x46\x29\x04\x76\xe5\xe5\x5e\xf3\x39\x8c\x46\x64\x36\xf9\xbc\xfe\xce\x7f\x9c\x80\x37\x89\xac\x79\xab\xb7\xdd" +
	"\xec\xbf\xee\xec\xf9\x80\x05\x1a\x54\x19\xe6\xaf\xb4\x94\x98\x39\xa1\x95\x85\x70\x71\xeb\x7c\x1b\xfb\x28\x5a\x2b" +
	"\xe6\xea\xdf\xdc\xba\x99\xb2\x68\xdc\xec\x02\xea\x2a\xe7\x0e\x2d\xb8\x05\x82\x50\x99\x41\x52\x04\xb3\x0b\x28\xc8" +
	"\x11\xf0\x61\xa6\x67\x92\x5b\x07\xc2\xdf\xc2\x1c\x66\x17\x24\xae\x30\xba\x04\xae\x60\x76\x79\xf5\xfa\xc3\x35\xe8" +
	"\x8a\xb2\x23\xb4\x62\x30\x2b\x2b\xe9\x25\x59\xc8\x4b\xc9\x7a\x6d\x41\x3f\x1a\xb6\x9b\xcf\xb8\xa8\x55\x06\x09\xc2" +
	"\xc9\x56\xf4\xd3\x03\xf6\x26\x22\x07\xa1\xdc\xdf\xfe\x92\x42\x13\x47\x87\xb2\x22\x0a\xe0\x2a\x07\x36\xb3\xef\xff" +
	"\x45\x3f\x49\xd3\xac\x77\xac\x6d\x01\xd9\x33\x99\x3b\x5f\xe7\x8e\xf2\x96\x88\x3c\x25\x45\x1d\xac\x50\xe5\x94\xaf" +
	"\xb8\x8d\x63\xca\xd1\xbe\x7a\xca\xf0\xcc\x7a\x59\x43\xc9\x01\x76\x70\x85\x6e\xad\x7f\xa3\xd3\xa2\x0b\x29\xc8\xb9" +
	"\xe3\xbe\x1c\x38\x54\xdd\x75\xf2\xc6\x62\x56\x1b\xe1\x56\x60\x51\x59\xe1\xc4\x23\xfa\xf8\xd3\xed\x41\xec\x7e\xdc" +
	"\x0a\xde\x41\x4d\x49\xbe\x87\xcc\x74\x78\x91\xe2\xfa\x05\x31\xca\xe3\xc8\xa0\xab\x8d\x02\x8c\x03\xb8\xde\x1e\xf4" +
	"\x2c\x1c\xda\x76\xce\x83\xe6\xbb\xbd\x3b\xa8\x2d\x49\xf7\xbc\x23\x77\x7a\x43\x9f\xf1\x2a\xee\xca\x05\xfa\x44\x87" +
	"\x8c\xbd\xe3\x55\x97\x5f\x10\x1b\x58\x0b\xe5\xd0\x14\x3c\x43\x08\x0f\xdf\xf1\xaa\x42\x03\x5a\xc9\x15\x54\xdc\x38" +
	"\xc1\xa5\x5c\x7d\x29\xce\x37\x2a\x92\xac\x84\x13\x2a\x99\xb5\xd4\x14\xd0\x18\x6d\xc8\x0f\x51\x40\x56\xb2\x77\x3a" +
	"\xc7\x24\x85\xf3\x73\x18\x9c\x0b\xd2\x3e\x20\xcf\x5f\x4a\x49\xa7\x7b\xb7\xb3\x72\xbf\x4c\x7c\x24\xde\xd4\x2a\xeb" +
	"\xc3\x94\xfc\xfc\x5c\x74\xd2\xae\x06\xd8\x6b\x63\x92\x34\x8e\xda\x38\x22\x9c\x66\x25\xbb\xc4\xcf\x2e\xf1\xf5\x18" +
	"\xd9\xa5\x70\xd9\x02\x32\x38\x3d\xa7\x27\x41\x5f\x92\x9e\x41\x06\x0d\xec\x9b\x11\x47\x51\x94\x71\x8b\x30\x6a\x9a" +
	"\x5e\xcf\x68\x7d\xec\xa5\x14\xdc\xa2\x6d\xdb\xf1\xc8\x37\xb3\x51\x67\xc1\x29\x5d\x8b\xb2\xf2\x3b\x9c\x20\x09\x39" +
	"\x16\xbc\x96\x2e\x48\xeb\x21\x42\xa1\xb6\xec\x52\xbb\x37\xba\x56\x39\xbb\xc4\x65\x91\x8c\x6e\x9a\x86\xbd\xe7\xd9" +
	"\x03\x9f\x63\xdb\xde\x0e\x06\x44\x70\x05\x7e\xfa\x04\x4a\x3b\x28\xe8\xd2\x68\x0c\x59\x1a\x47\x14\xa0\x36\xde\x11" +
	"\xfc\x1f\xe1\x16\x57\x8e\x67\x0f\x49\x56\x86\x40\xa6\x5d\xf5\xbc\x2e\x2b\xb7\x02\x2c\x2b\x27\xd0\x02\x97\xd2\x57" +
	"\x8c\xaf\x01\x0b\xba\xf0\x9f\xb2\xda\x18\xea\xce\xfa\xfe\x23\x66\x8e\xc1\x4b\x69\x35\x3c\x28\xbd\x54\xc0\x2d\x7c" +
	"\x40\x8b\xee\x18\xc2\xbc\xf8\x24\x1d\x7c\x0b\x0d\x9c\xa0\x6f\x77\xeb\xaf\x9a\xf6\x0c\x7a\x8b\xbb\x99\xd1\x34\x6c" +
	"\x33\x59\x76\x67\x78\xb6\x7e\x02\x7e\x76\x0e\x06\xf9\x70\x8e\x93\xac\x4b\xed\xc0\x2d\x0c\xf2\x1c\x2c\x2f\x70\xaf" +
	"\x3c\xfe\xcf\x63\x7d\xe0\xc7\x7a\xb4\x47\x17\xd4\x96\x36\xff\xa2\xe8\xe6\x76\x10\xa6\x3b\x2f\x70\x44\xdd\x6b\xac" +
	"\x4b\xe1\x28\x49\xab\xd1\x5d\x1c\xfd\x8a\x85\x36\xb8\x29\xde\x88\x62\x9f\xd4\x7e\x3e\x8d\x77\x12\x10\x8a\xb8\x13" +
	"\x35\xa1\xdb\x2f\x0b\x87\x66\xab\xb9\x7c\xd5\xed\x90\x9b\x4b\x5c\xee\xba\x95\x19\xf4\xf3\x9c\x83\xc2\x25\x08\x25" +
	"\xa8\x13\x89\x3f\x30\xdf\xca\xd5\x91\xb6\xb4\x2f\xad\x03\xcc\x40\x81\x1f\xbb\xd3\x93\x38\x8a\xae\x7f\xbb\xf8\x2d" +
	"\x11\x39\xf2\xf4\x14\x6a\x8b\xc0\x61\x2e\xf5\x3d\x97\x50\x69\x2d\x61\xb9\x10\xd4\x09\xb8\x02\x83\x73\x61\x1d\x1a" +
	"\x8f\x0e\xe4\xd9\x22\x60\xc5\x2d\x30\x8e\xa2\x7b\x1f\xc3\x29\xa7\x60\x40\xc9\xab\x2c\x14\x14\x19\xe4\x61\x65\x35" +
	"\xb8\x05\x77\x61\x7e\xe0\x23\xe4\x1a\xad\xaf\x35\x85\x98\x83\xd3\xc0\x3d\x47\x88\xa3\x28\x48\x16\x25\x32\x70\x0b" +
	"\xa1\x1e\x08\x29\xc2\xfd\xc9\xc2\x52\x1b\xb7\x00\x5b\x67\x0b\x9a\x3b\xdc\x39\x34\x8a\xc5\xd1\xc9\xd4\x4f\xf2\xbe" +
	"\x42\x7f\xde\x71\x94\xda\x19\x21\xe3\x14\x4a\xfe\x80\xc9\x10\x13\x63\x78\x31\x86\xbf\xa6\x63\x2a\xf1\xa3\xd4\xca" +
	"\x19\xfe\x88\xc6\x7a\x72\x65\x74\x3d\x0f\x44\xca\x4a\x91\xf5\x63\xcf\xd7\x50\x8e\x1d\x39\x11\x6a\x4e\x49\x23\x69" +
	"\x74\x5b\x87\x58\xa1\x57\xd9\xd7\x75\x96\xed\x65\xe4\x79\x9a\xf4\xc8\x0d\x7c\x0c\x9f\x43\xd3\x16\xd4\x9f\x25\xaa" +
	"\x24\xcb\x18\xf9\x98\xc2\x04\xfe\x7c\x06\x02\xfe\x7e\x0e\x2f\xce\x40\x4c\x26\xbe\x9b\x77\x4f\x6f\xc4\x2d\x3b\xac" +
	"\x62\x02\x1f\xa9\xd3\x7d\xfc\xe5\x97\x2e\x10\x4f\x18\x69\x33\xae\x8e\x0e\xb9\xf1\xb0\x5f\x8d\x41\xe4\x9f\xa1\xee" +
	"\x3c\x18\xcc\xbf\x8c\xed\x56\x1d\xfc\x70\x0e\x4a\x84\x91\x27\x0a\x3a\xed\xa7\xcf\xfe\xc1\x44\xe4\x9f\xc7\x80\xe9" +
	"\x99\x3f\xb3\x75\xeb\x68\x93\x46\x63\x36\x9d\x7c\x23\x1b\xd9\x60\x60\xef\x0b\x7c\x5a\x5e\xdb\x7b\xb2\xdb\x01\x8e" +
	"\x39\xb2\x73\xee\x3b\xfd\xe8\x0e\x29\x21\x3b\xe8\x1e\x26\x38\x83\xfc\x10\xb5\x59\x33\x9e\x63\xac\xe6\x60\xda\xbf" +
	"\x90\xda\x74\xc4\xa1\xec\x88\x43\xe0\x38\x67\x50\xd2\x33\xcf\x10\x8e\x73\x9d\xf1\xb1\x67\x57\xe8\x87\xbb\x07\xfc" +
	"\x18\x90\x44\x07\x66\xd1\xe1\x3a\xc4\x6c\x10\xe9\x21\x48\xc7\x80\xe3\x0e\x85\x89\x48\x0f\xc4\xfb\xb9\x80\x53\xb8" +
	"\xe9\xff\xbe\x07\x57\x19\x57\xa7\x21\xcf\x9e\x27\xd5\xca\x11\xa3\x7b\x11\xe4\xf6\x06\x9e\xf7\xa6\xde\x9c\xbe\xb8" +
	"\x0d\xa2\x22\xef\x87\xc2\x65\xb2\x3d\x20\x76\x11\x73\xc0\x8f\x5e\xcd\x37\xc1\x66\xcb\x22\x02\x83\xca\xfb\xce\x41" +
	"\x38\x3c\xe4\xdf\x06\x04\x3b\x99\x18\xf2\xc5\x27\x09\x23\x3d\xdf\x5f\xb2\xd8\xef\x4a\x7c\xaa\xb1\x47\xec\x24\x90" +
	"\x39\xbf\xf7\xd1\x58\x60\x33\xfb\x46\x6a\xee\x68\x05\xfe\x76\x6a\x09\xde\x9a\x5d\x7e\x69\xc9\xeb\xfd\xad\xc3\x26" +
	"\x29\x63\x8c\x56\x8f\x35\xb7\x1c\xfc\x39\x81\xe9\x09\x1c\x73\x44\x14\xc2\xaf\xee\x81\x10\x47\xd1\x74\x0a\x4a\x03" +
	"\x4d\x55\x9a\x5f\x7e\xf4\x09\xeb\x87\x1d\xe6\xdf\x47\x97\xbf\xc5\xa7\xde\x81\xf0\x12\xa1\x9f\x98\xdf\xc7\x9d\x07" +
	"\x6c\xe2\x09\xfe\xdc\x17\xcf\x96\xae\x3d\x4d\x57\x75\x55\x69\x43\x3d\xe8\xa0\xb6\xdf\x55\x60\xc7\xd4\x4e\x4e\xe1" +
	"\xa7\x4f\xa3\x31\xd1\x3e\xa1\xe6\x49\x99\xa6\xdb\xcd\xb0\x67\xe3\x7e\x05\x7c\x0a\x6f\x81\xc7\x1e\x88\xd7\x7a\xd1" +
	"\xe5\xdd\x84\xa7\x1d\xde\x97\x8a\xf5\x2c\xa5\x9f\xfb\x52\xc2\x23\x97\x35\xda\x43\xaf\xb5\x06\x8d\xf4\xc7\x9d\x4e" +
	"\x7a\x28\x49\x06\x1d\x30\xc6\xf6\x57\xfa\x9b\xdb\x43\x8b\xb0\x28\xc8\x4c\x6a\x34\x5b\x93\x0a\xce\x7b\x86\xb3\x7b" +
	"\xc5\xb3\x9c\x6d\x9a\xb0\x59\xfb\xfe\x7b\xb4\xa1\x06\x89\x5d\x97\x30\xe8\xc6\xdb\x7b\xf7\x66\x11\xdb\x8e\xbe\x41" +
	"\x17\xb7\xeb\xf2\x39\xf0\x62\xe5\x50\xa9\x1c\xcb\xc3\x3d\x4a\xad\xe6\x3e\xe8\x7e\x67\x0a\x00\xbb\xdb\x54\xcc\x1d" +
	"\xdd\x24\xfe\xf5\x65\x19\xf3\x1b\x7d\xed\x31\xd0\x65\x2e\xac\x63\xdc\x75\xb2\x7d\x22\xaf\x17\xeb\xa7\x4b\x21\x25" +
	"\xdc\xd3\xee\x26\x1d\x1a\xcc\xc3\xe0\x54\x5c\xca\x15\x08\x05\x1c\xde\x6a\x22\xba\x0c\x2e\x35\xed\x4a\x9f\x6a\x34" +
	"\x2b\x98\xa3\xb3\x24\x07\x3f\x63\x56\x13\x14\xbe\x0a\x1a\x01\xa2\x5f\x00\x90\x5d\x70\x7c\x25\x30\x9e\x00\xc5\xd6" +
	"\x4e\x70\x0a\x1c\x0c\xd6\xd6\x2f\x81\x25\xaf\x7c\xb0\x69\x41\xc8\x45\xe1\x5f\x56\x3a\xe0\x72\xae\x8d\x70\x8b\xd2" +
	"\x42\x8e\x14\x72\xe2\xbe\xb4\x44\x12\x41\x16\x7f\xd0\x62\xd0\xef\xbc\x1d\xb4\x7c\x32\x18\x5c\xe9\x12\x89\xe3\x53" +
	"\xd6\x0a\x6d\xa6\x84\x45\xa9\x75\x05\xa6\x56\x16\x0a\xee\xf7\x0c\xb7\xe0\x14\x67\x0a\x32\xd1\x7c\x6a\x59\x79\x5d" +
	"\xbd\x5a\x60\xf6\x40\x98\xf5\x4e\x95\xbc\xba\xd9\x76\xeb\xf6\x5e\x6b\xb9\xe7\xd8\xd3\x50\x17\x05\xfc\xd0\x0b\xbe" +
	"\x09\x28\x7f\x6f\x44\xe9\xdf\x60\xf5\x35\x74\xbb\x1e\xb1\x07\xab\x62\xef\xbc\xef\x7c\xcf\x0b\x3d\x07\x67\x6a\xdc" +
	"\xe5\x74\xc3\x42\xfa\x5f\x00\x00\x00\xff\xff\xda\x35\xe9\x88\x7d\x17\x00\x00")

func bindataTpl20entitygotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl20entitygotpl,
		"_tpl/20_entity.go.tpl",
	)
}



func bindataTpl20entitygotpl() (*asset, error) {
	bytes, err := bindataTpl20entitygotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/20_entity.go.tpl",
		size: 6013,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1549032801, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl30collectionmethodsgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x95\x4f\x6f\xea\x38\x14\xc5\xd7\xc9\xa7\x38\xab\x51\x32\xa4\xa1\xdd" +
	"\xd2\x61\x51\xb5\x1d\xa9\xeb\x59\x22\x34\x32\xce\x0d\x31\x18\x1b\x39\x4e\x11\x41\x7c\xf7\xa7\x9b\x84\x26\x05\xa4" +
	"\xbe\xa7\xac\xea\xda\xbe\x7f\xce\xef\xdc\x98\xe9\x14\xff\x2a\xed\xc9\x21\x6f\xfe\x94\xf0\x05\x41\x56\xce\x91\xf1" +
	"\x28\xb5\x92\x84\xd5\x11\x7b\x47\x99\x92\xc2\x13\x72\x1c\x94\x2f\x6c\xe5\xb1\xa3\x9d\x75\x47\x08\xad\xad\x14\x5e" +
	"\x59\x93\x86\xd3\x29\x5e\x2a\x6f\xb1\x26\x43\x4e\x78\xca\xf0\xa9\x04\xb2\x9d\x5e\x93\x49\xc3\xbc\x32\x12\x91\x94" +
	"\xf8\xfb\x74\x4a\x5f\xad\xd6\x24\x39\xec\x7c\x8e\xbb\x1e\xa2\x1c\x7c\x27\xe2\xf3\x77\xe3\x95\x3f\xf2\xd9\xca\x5a" +
	"\x1d\xdf\xc4\xe0\x14\x06\xab\x44\x61\x36\x87\x94\xe9\x9b\xf0\x62\x31\x7b\x5c\x26\x8f\x61\x90\x5b\x87\xff\x13\x10" +
	"\x1f\x39\x61\xd6\x74\xb9\xc0\x21\x81\xca\x91\x47\x14\x37\xeb\x60\x85\x39\xc4\x7e\x4f\x26\x8b\x56\x09\x28\xe6\xbd" +
	"\x4b\x36\xb5\xc4\x1c\x46\x69\x4c\xa7\xf0\x85\x2a\x21\x3e\xad\xca\x5a\x3e\x9d\x74\x4d\x62\x1b\x06\xc1\x99\xd3\x4e" +
	"\x26\x21\x2f\x2e\xa5\xe6\x58\x85\x81\x23\x5f\x39\x03\x29\xc3\x73\xc8\x6c\xde\x85\x2c\x70\x50\x5a\xc3\x55\xa6\x91" +
	"\xca\x5a\x90\xc3\x1a\xc6\x08\xe5\x69\x57\x42\x19\x2c\x96\x43\x04\x23\xb8\x72\xc5\xbb\x54\xef\x03\x65\x74\xea\x3e" +
	"\xb7\x3c\xea\xc1\xc4\x8d\xd4\x6b\x75\xaf\x95\xef\xc4\xd1\xce\x7e\xd2\x45\x0d\x7c\xe1\x6c\xb5\x2e\xb0\x79\x78\x1a" +
	"\xa1\xe4\xb5\xf2\x91\x4a\xb0\x81\x32\xfe\x7e\xf3\xf5\x60\x16\xd8\x34\x69\xf7\xc7\x6e\x82\x0b\x12\x19\xb9\x30\xe0" +
	"\xad\xa8\x5e\xa8\xd9\x32\x41\xbd\xd8\xcc\x58\x09\x6b\xde\x26\x30\x1c\xad\xc9\x44\x75\xfc\xb0\x99\xa8\xa4\x5b\x3f" +
	"\x63\x8b\x7f\x60\x9e\xb1\x9d\x4c\x1a\x0e\xf5\x62\xfb\xbb\x83\x71\xe6\x9e\xe6\xa8\x17\xb3\x3e\xef\x72\x38\x22\xf5" +
	"\x2d\xc4\xff\x0e\x62\xdf\x52\x2c\x85\x57\x65\x7e\x6c\xd2\x96\xd6\xf9\xf4\xc3\x78\x72\xb9\x90\x34\x82\x22\xa7\x1f" +
	"\x60\x3c\xa1\x37\x35\xf9\x5a\x6f\x58\x60\xff\x4f\x32\xb8\x84\xb6\xcb\x37\xd2\xe4\xe9\x9b\xdb\xc2\x34\x86\x23\x77" +
	"\x76\xd7\xf6\xcc\xe4\x47\xb4\xda\xd6\x88\xd4\x1f\x1a\xfe\x55\xfa\xcb\x74\x32\x59\xef\x2d\x1e\xf0\xd4\x58\x70\x21" +
	"\x41\x26\x8b\xaf\x07\x43\x4d\x9e\x9a\xd1\xa8\x17\x64\xb2\x6b\xb7\xcb\xc2\x56\x3a\x6b\x4d\xbf\xf5\xbc\x33\x9c\xe3" +
	"\x7e\x70\xfa\xc3\x94\xe4\xba\x2f\x66\xaf\x85\x24\x08\x18\x3a\xb4\x14\x85\xc7\xde\x96\xaa\x79\x1e\xd4\x08\x88\x6d" +
	"\x91\xc8\x60\xf8\xf1\x27\x18\x0f\xb5\xee\x5f\xce\x3a\xc1\x5f\x83\xec\xa7\xf3\x80\x27\x83\x6c\x88\x76\x3c\xdb\x47" +
	"\xf5\x07\x32\x2f\x4d\xde\x96\x8c\xc8\xb2\x2b\x2e\xdc\x0b\x1f\xdb\xfc\xa6\xff\x11\xa0\xda\x9a\x91\x41\x9a\xa6\xdf" +
	"\x7f\x7e\xee\x41\xea\xdb\xef\x18\x74\x1b\x09\x4c\x9a\xa6\xf1\x77\x49\xbf\x02\x00\x00\xff\xff\xfa\x2e\x15\x32\x63" +
	"\x07\x00\x00")

func bindataTpl30collectionmethodsgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl30collectionmethodsgotpl,
		"_tpl/30_collection_methods.go.tpl",
	)
}



func bindataTpl30collectionmethodsgotpl() (*asset, error) {
	bytes, err := bindataTpl30collectionmethodsgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/30_collection_methods.go.tpl",
		size: 1891,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1550521508, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl40binarygotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc3\x30\x10\xc6\xf1\x19\x3f\xc5\x37\x30\xc4\x08\xf9\xde" +
	"\x01\x26\x86\x8e\x4c\x88\xc1\xb9\x5c\x53\x4b\xc9\x5d\x75\xb5\x91\xaa\x28\xef\x8e\xa0\x50\x51\xa6\x76\xf6\xdf\x9f" +
	"\xee\x47\x84\x57\x9d\xb3\x1f\x76\x79\x7a\x2a\x9a\xfd\x88\x32\xef\x27\x99\x45\xeb\x01\xa2\x6c\x43\xd1\x31\x9d\x9e" +
	"\xce\xa5\x78\x0a\xdb\xa6\x8c\x8e\x19\x0f\xcb\x72\x9f\x9e\x6d\x9a\x84\x6b\x31\x5d\xd7\xf8\x7f\xb2\x1b\x72\xcd\x78" +
	"\x7b\xef\x8f\x55\x22\xc4\xdd\x1c\x4b\xb8\x73\xa9\xcd\x15\xcc\xe9\xdc\x7f\x97\x11\x44\x78\xf9\xbd\x42\x06\x7c\x94" +
	"\x8c\xb1\xd4\x5d\xeb\x13\xdb\x4c\xa3\x8d\x46\x7b\xb7\x6a\x7d\xdb\x86\x35\x04\x22\x6c\xae\x24\x6c\xae\x03\x5c\xcc" +
	"\x75\x11\x7f\x05\x8f\x5f\x82\x93\x22\x5e\x32\x7e\x7e\x75\x11\x37\x0a\x3e\x03\x00\x00\xff\xff\x22\xed\xb8\x7c\x86" +
	"\x01\x00\x00")

func bindataTpl40binarygotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl40binarygotpl,
		"_tpl/40_binary.go.tpl",
	)
}



func bindataTpl40binarygotpl() (*asset, error) {
	bytes, err := bindataTpl40binarygotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/40_binary.go.tpl",
		size: 390,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl90testgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xdf\x6f\xdb\x38\x12\x7e\xa6\xfe\x8a\x39\xdd\xa5\xa0\x5a\x2f\xd3" +
	"\x2e\x0e\x0b\x9c\x7b\x7d\x68\xec\x74\xd7\xa8\xf3\xa3\x71\xd0\x3d\x60\xb1\x08\x68\x69\x6c\x13\x91\x49\x2f\x39\x8a" +
	"\x13\x08\xfa\xdf\x0f\x43\xc9\x76\xdc\xfc\xe8\xe6\xb0\x0f\xf7\xd0\xd6\x22\x67\x86\x33\xdf\xcc\xf7\x91\x9d\x55\x36" +
	"\x87\x4b\x0c\x74\x8a\xeb\x4b\x3d\x2d\x31\x48\x82\xd7\x84\x81\x8c\x9d\xab\xcb\x0c\xea\x44\x14\x53\xe8\x7f\x80\x62" +
	"\x59\xf2\xb2\x3a\xa9\x02\x0d\x9c\xb5\x98\xd3\xf0\x48\x52\x96\x88\x02\x67\xe8\xb7\xfb\x83\xd2\x05\x94\xd4\x83\x62" +
	"\x9a\x25\x89\xa8\xeb\xb5\xa1\x05\x28\x3e\x63\xf2\x65\x3c\xac\x96\xab\x9f\x4b\x37\x3d\xd7\xb4\x68\x9a\x7d\xcf\x6e" +
	"\x7b\xec\x74\xc1\xfe\x69\x5d\xab\xa6\x49\x7b\xf0\xea\x1b\x83\xb3\x15\x19\x67\x43\x9d\x08\x31\xb9\x36\xab\xe1\xd1" +
	"\xa0\x44\x6d\xab\x55\x1f\xc8\x57\xd8\x4b\x44\x93\xa9\x21\x47\xf6\x58\xc8\xac\xae\xd1\x16\x4d\x93\x24\x22\xa7\xdb" +
	"\x1e\xe4\xda\xe6\x58\x72\x41\xb9\xb3\x84\xb7\xa4\x7e\x35\xb4\xb8\x34\x4b\x74\x15\xc9\xcd\xda\x91\xce\xaf\xe7\xde" +
	"\x55\xb6\x90\x59\x0f\xc8\x2c\x51\x9d\x18\x5b\x11\xbe\xfe\x71\x5b\x70\x1b\x49\x66\x89\xa0\x69\x19\x7a\x80\xde\x73" +
	"\xd8\x1d\x90\xf1\xbc\xa2\x28\xe3\x09\x0c\xd9\xb9\x73\xa5\x2c\xa6\x59\x96\x08\x1d\x02\x7a\x52\xa7\xee\xd8\x7b\xe7" +
	"\xb9\x5c\xf4\x9e\xf1\xa2\x69\x79\xaa\x97\x18\x38\x14\xc7\x55\x5d\xb0\x2c\x11\xc1\x79\x52\x13\xf2\xc6\xce\x83\xdc" +
	"\xd8\xed\x62\x1d\xdf\xea\x9c\xca\x3b\x8e\xf5\xdb\xef\x21\x9a\xd5\x50\xd7\x3f\x80\xd7\x76\x8e\xf0\x0f\xe2\x40\x1c" +
	"\xb6\x0b\x09\x4d\x93\xd6\x75\xf7\xc5\xb1\x18\x6c\xb6\x8f\x78\x35\x3d\xd8\x1d\x91\x08\x2e\xae\x4b\xe8\xab\x2e\x4d" +
	"\xa1\x09\xb9\xbe\xa7\x2b\x11\x37\xda\xc3\x2a\xc0\xeb\x55\xc0\xaa\x70\x6a\x82\xfe\xc6\xe4\x98\x88\x55\x80\x0f\xd0" +
	"\x2d\xf2\x2c\x9d\xe2\xba\xdb\x93\x6f\x7b\xf0\xaa\xdb\xd9\xf4\x78\xac\xed\xbc\x0f\x69\x81\x69\xef\x53\xe9\x34\x9d" +
	"\xe8\xdb\x21\xe6\x66\xa9\xcb\xd0\xff\xa9\xe9\x25\x42\x74\x0e\xb1\x8b\x7a\xfe\x49\x5f\xe3\xa7\xca\xe6\x32\x5d\xe3" +
	"\x34\x18\xc2\x2b\x53\xa4\x3d\xe0\x31\x97\x4b\x7d\x3b\x46\x0b\xc6\x52\x06\xd2\x58\x42\x3f\xd3\x39\xd6\x4d\xcc\xd8" +
	"\xf9\x38\xeb\x42\x78\xa4\xca\x5b\x78\xd7\x03\x6b\xca\x44\x88\x26\x7b\xee\x94\x40\xce\xff\x55\x67\x30\xf6\x83\x2a" +
	"\x90\x5b\x0e\x5c\x81\x90\x3e\x0a\x52\x87\x4c\x0a\x3f\x34\x4d\x22\x5a\x86\x3d\xd7\xe2\x44\x90\xba\xa8\xac\x4c\xeb" +
	"\xfa\x67\x37\xd0\x4b\x2c\xf7\x3a\x7e\x75\x6c\xc9\xd0\xdd\x26\xfd\x07\xdc\xe7\x79\xdc\x8e\x22\x67\x12\x7d\xe5\x36" +
	"\xc2\xe3\x51\x39\x2d\x81\x96\x26\xc7\xe3\xe3\xc1\x65\xe7\xaf\x26\x58\x62\x4e\x47\x77\xe7\x9f\x65\xfa\x3a\xcd\xee" +
	"\x9b\x4c\x68\x49\x1f\xd9\x6e\xbb\x12\xa1\xfe\xe8\xe7\x41\x66\xea\xf8\x76\xa5\x6d\x71\x5e\xea\x1c\x7f\x71\x65\x81" +
	"\x3e\xc8\x0c\x0e\x0f\x61\x63\x02\x73\xb4\xe8\x35\x61\x00\x5a\x20\xe4\x3a\x5f\x60\x01\x93\x2f\x63\x68\x69\x00\x51" +
	"\x82\xae\xf1\x0e\xd2\x74\x2f\xb3\x96\x99\x6c\xfe\x19\xef\x64\x1a\x62\x82\x57\xef\xde\xa6\x99\xfa\x75\x81\x1e\x83" +
	"\xba\xc0\x80\xc4\xe4\x13\x57\x3d\xb8\xda\x92\xfc\x5e\x04\xb6\x93\xb1\x7b\x6d\x13\xd4\xc0\x95\xd5\xd2\x86\xa6\xa9" +
	"\x6b\x33\x03\x6d\x0b\x50\xa3\x70\xfe\x99\xff\xfe\x58\x91\x1b\xd9\xdc\xe3\x12\x2d\x35\x0d\x2b\x5f\x67\xce\xfd\x51" +
	"\x9f\x0c\x96\x45\xd3\xa4\x99\x1a\x63\x08\x67\xfe\xf8\x8f\x4a\x97\x32\x53\x23\x4b\xf2\xdd\xdb\x6e\x46\x22\x3b\xe3" +
	"\x3f\x3c\x02\x99\xba\x74\x93\x2f\xe3\x16\x8f\xf8\xf3\x1b\x30\x2c\xae\x9f\x03\x64\x5b\x72\x22\x9e\x64\x32\xe3\x35" +
	"\x70\x65\x27\x6e\x75\xdd\x8e\x19\x27\xce\xbe\xc6\xd9\xb6\xe9\x32\x76\x3d\x16\x5d\x52\x37\x8b\xea\x17\xbd\x5f\x34" +
	"\xfc\xd8\x34\x9c\x2a\x2d\x4c\x80\x68\x72\x78\x63\x70\x0d\x85\xc3\x00\xd6\x11\x84\x6a\xb5\x72\x9e\x40\x57\xe4\xae" +
	"\xcc\xc6\x2d\x92\xc6\xad\x07\xae\xb2\xf4\xb0\x09\x71\x7a\x9e\xe9\x65\xbc\x51\xa2\x1a\xb7\x95\x70\x4d\x4f\x57\x2b" +
	"\x48\x8d\xdd\x7c\x26\xd3\x6e\x7a\xff\xa8\xd0\x1b\x0c\x7d\x38\xf8\xfb\x4d\xda\xbb\xd7\xfa\x78\x58\xf1\xa5\xdd\x96" +
	"\xd9\x9e\xef\x0e\x1c\x28\x9d\x2e\x60\x93\x7c\x1f\x0e\x58\x2b\x36\x9f\x59\x47\x7b\x2c\x03\x46\x46\xb7\x68\x8f\x4e" +
	"\x27\xc7\x17\x5b\xde\x8c\x2c\x67\x2a\x33\x75\x54\x99\xb2\xf8\xaa\xcb\xaa\xbd\x0f\x76\x96\xf7\xe9\xd3\xae\xa8\x73" +
	"\x8f\x2b\xed\x71\xcb\xa2\x28\xd6\x89\x10\x33\xe7\xc1\xb0\xe9\xdb\xf7\x60\xe0\xdf\xf0\xaf\xf7\x60\xde\xbc\x69\x65" +
	"\x89\xbd\x2d\xef\x59\x5c\xcb\xa7\x98\x2d\x84\x30\xb3\x4d\x0b\x56\x41\xb1\x16\x0e\x35\x69\x19\xbd\xb3\xf7\x71\xeb" +
	"\x6f\x1f\x58\xd9\xda\xa8\x82\x54\x84\x78\x26\xd3\xd1\xf0\x3f\xbf\x1d\x14\xbf\xf7\xe1\xe0\x0d\x43\x69\x76\x98\x77" +
	"\x92\xc8\x3f\x23\x08\xa2\x1c\x0d\xef\xbf\x3a\x06\x0b\xcc\xaf\xc7\x3a\x50\x0b\xc6\x68\x18\x5f\x08\x31\x6e\x7f\xff" +
	"\xfd\xa2\x9e\x17\xba\x4c\xee\xa3\xa6\x2e\x30\x77\xbe\x90\x69\xdb\xda\x91\x65\xb9\xc1\x7c\xd0\x3e\x04\x22\x6c\xd9" +
	"\x06\x9b\x3d\xaf\x56\x17\xba\xad\xb3\x8a\xfe\x04\x6e\xdf\x9b\xe0\x91\xa5\x9f\xfe\x19\x64\x39\x1a\x7e\x33\xb3\x67" +
	"\x15\x7d\x67\x66\x1f\xbe\x01\x2a\xc3\xd1\xe4\xbb\x6c\x37\x6d\x3d\xe0\x0e\x1c\x14\x7d\xb8\xe8\x56\xa0\x30\x45\xa4" +
	"\xdd\x52\x53\xbe\xe0\x96\xb4\x25\xdd\xbb\x53\xf2\x96\xf9\x3b\xd2\xb3\xb8\xc5\x8b\x45\x74\x6c\x67\x13\x35\x0a\xed" +
	"\xcb\xa4\xbd\x97\xc4\x83\x94\xc6\x68\xe7\xb4\xe0\xc4\xea\x3a\x3a\x0c\x16\xda\x9f\xc4\xdb\x72\x4e\x8b\xb6\x74\x7e" +
	"\x74\xbc\x8a\x4d\x50\x5b\x95\xe9\xc0\x3c\xd1\x77\x53\x3c\xf7\xe6\x46\x53\x9b\xd3\x46\x2c\x5b\x8f\xb3\x8a\x5e\xe2" +
	"\xb2\x81\xe1\x4f\xbb\x40\x58\xb8\xaa\x2c\xb6\x30\x71\x8b\x3a\x00\x3a\xf2\x9a\x59\xc4\x71\x83\xc5\x5d\x20\x5c\x7e" +
	"\x45\x1f\x8c\xb3\x58\x3c\x05\x4a\xec\xe0\x4b\xeb\xfd\xbf\x28\x77\x5b\xd0\xe1\x21\x98\xb9\x75\xdc\xfa\xfe\xa6\xb5" +
	"\x5d\x94\x9d\x87\xed\xbe\xee\x7f\xf0\x9f\x07\xff\x67\xd8\x67\x59\x9c\xc5\xbf\x56\xf6\x9f\x64\xd0\x8b\x85\xfb\xa1" +
	"\xfe\xde\x97\xdf\xfd\xac\xbc\x5b\x5f\xe5\xec\x76\x15\x83\x94\x68\x65\x9b\x92\x62\xe5\xcc\x32\x75\x81\x2b\x7e\xdd" +
	"\xc8\x4c\x4d\x90\x36\xe4\x94\x0f\xed\x1e\x55\xf5\x97\x89\xe5\x93\xf7\xf7\xf7\xa4\x91\x11\x7c\x54\x1b\xbf\xdb\xc5" +
	"\x1d\xba\x9c\x14\x98\x98\x15\x8c\x86\xfc\x4c\x76\x1d\xb0\xdd\x88\x6d\x0c\xbb\x1b\xf0\xe1\xdd\xdb\xe1\xfb\xc8\xdd" +
	"\xfb\x3f\x5f\xdb\xc9\xde\x60\xb2\x54\xef\x3e\x9b\xe4\xbf\x01\x00\x00\xff\xff\x92\x98\xbd\x92\x22\x0f\x00\x00")

func bindataTpl90testgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl90testgotpl,
		"_tpl/90_test.go.tpl",
	)
}



func bindataTpl90testgotpl() (*asset, error) {
	bytes, err := bindataTpl90testgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/90_test.go.tpl",
		size: 3874,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1550690028, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplFbs10headergotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x43\x31\x10\x05\x7b\x9f\x62\x15\xd1\xf2\xdd\x13\x51\xd0" +
	"\xd1\x81\xc4\x09\x36\xf6\xc3\x58\xf1\xdf\xfd\xac\x6d\x0a\x56\xbe\x3b\x22\x07\x48\x33\xd5\x68\x26\x46\x7a\x99\x43" +
	"\xa9\x40\x60\x3c\x90\xe9\xa7\x32\x95\x3a\xbe\xe6\x65\x4b\xba\xc7\xa4\x86\x3e\xd4\x50\x35\x1e\xd7\x12\xfb\x77\x8b" +
	"\x79\x6f\x05\x12\x82\xf0\x8e\x7e\x70\x02\xb9\x6f\xef\x9c\xae\x5c\xb0\xd6\x39\x84\x2a\xa9\xcd\x0c\x3a\xdd\x0b\x0d" +
	"\x35\x2e\x88\x32\x5b\xbb\x61\xfb\xbc\xf4\xd3\x39\x04\x77\x63\x29\xa0\x07\x3d\x46\xa7\xa7\x67\xda\x3e\x60\x95\x5b" +
	"\xfd\x85\xbd\x82\x33\xec\xed\x18\x55\xa5\xd3\xe3\x5a\xc1\xfd\xe6\xfd\x6f\xdd\x21\x79\xad\xf0\x17\x00\x00\xff\xff" +
	"\x85\x4a\x09\x56\xd4\x00\x00\x00")

func bindataTplFbs10headergotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplFbs10headergotpl,
		"_tpl/fbs_10_header.go.tpl",
	)
}



func bindataTplFbs10headergotpl() (*asset, error) {
	bytes, err := bindataTplFbs10headergotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/fbs_10_header.go.tpl",
		size: 212,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplFbs20messagegotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4a\x03\x41\x10\x86\xeb\xdb\xa7\x98\x17\x70\xd3\x27\x95\x5e" +
	"\xd4\xce\xc6\x74\x22\x64\x34\xbf\xc7\xc2\xdc\xee\xb1\x3b\x87\xc4\x61\xde\x5d\xc2\x5a\x24\xad\xdd\x0f\xf3\xf1\x31" +
	"\xdf\x66\x43\x66\xf1\x31\x6b\xd2\xb3\x3b\x55\x2c\x15\x0d\x59\x1b\x31\xb5\x94\x27\x01\xd5\xf2\x4d\x5f\xa5\xd2\xfe" +
	"\x81\x94\x3f\x04\x74\x34\x8b\x87\xcb\x7a\xe1\x19\xee\xc7\x48\xf7\xab\x16\x9a\x90\x51\x59\x71\x8a\xa1\x73\xd7\x62" +
	"\x0b\x83\xd9\x1d\x55\xce\x13\x28\x8e\x45\xd6\x39\x37\xf7\x30\x0c\x66\xcf\x65\xe4\x19\x42\xf1\x29\x41\x4e\xee\x5b" +
	"\xb3\x57\xd4\xc4\x92\x7e\x50\x0f\xe7\x05\x14\xdd\x77\xd4\x5f\xfd\x63\xba\x0e\xf9\x32\x3d\x84\x7e\x1b\x8b\x08\x3e" +
	"\x35\x95\x7c\x9b\x32\xaf\xa2\x69\xe9\x29\xed\xdf\x2d\x37\x76\x0b\xc3\x9e\x95\xb7\x6f\x57\x91\xef\xbb\xe0\xe1\x37" +
	"\x00\x00\xff\xff\x0e\x67\xfe\xed\x51\x01\x00\x00")

func bindataTplFbs20messagegotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplFbs20messagegotpl,
		"_tpl/fbs_20_message.go.tpl",
	)
}



func bindataTplFbs20messagegotpl() (*asset, error) {
	bytes, err := bindataTplFbs20messagegotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/fbs_20_message.go.tpl",
		size: 337,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplProtobuf10headergotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4b\x05\x31\x10\x84\xfb\xfb\x15\x4b\xb0\xf5\x52\xd8\xf9\xb8" +
	"\xc2\xce\x4e\xc1\x1f\x20\xfb\xee\xd6\x35\xbc\x5c\x36\x6e\xf6\x44\x0d\xf9\xef\x62\xe4\xe9\x81\x60\x13\x66\x60\xe6" +
	"\x63\xb2\xde\xc3\xcd\x66\x02\x4c\x89\x14\x8d\x16\x78\x0d\x08\x1c\xec\x79\x3b\x8e\xb3\xac\x7e\x16\xa5\x62\xa2\x14" +
	"\xc4\xe7\x13\xfb\xf2\x12\xfd\xb2\x46\xa6\x34\x94\xf7\x64\xf8\x06\x13\xb8\xac\x62\x72\xe5\x0e\x43\xc6\xf9\x84\x4c" +
	"\x50\xeb\x78\xff\x2d\x5b\x3b\x0c\x61\xcd\xa2\x06\x6e\x87\x65\x61\xf1\xbd\x76\xdc\x9e\xba\xeb\xa6\xab\xb1\x4b\xb7" +
	"\xeb\x89\x70\xa4\xdf\xb8\x85\x95\x8a\xe1\x9a\xff\x26\xff\x19\x6e\xa2\xc8\xe4\xd3\x16\x63\x7f\x7e\xca\x92\x2d\x48" +
	"\x02\x96\xc7\xf3\xfc\x09\xdc\xfe\x07\xee\x30\xd4\xaa\x98\x98\xe0\x42\xb2\x15\xb8\x9e\x60\x7c\x20\x0d\x18\xc3\x07" +
	"\xe9\x2d\xe1\x42\x7a\xd7\x29\x05\x2e\x5b\x3b\x13\x6b\xed\xf1\xaf\x13\xd4\x4a\x69\x69\x6d\xf8\x0c\x00\x00\xff\xff" +
	"\x81\xcf\xcc\x5d\x70\x01\x00\x00")

func bindataTplProtobuf10headergotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplProtobuf10headergotpl,
		"_tpl/protobuf_10_header.go.tpl",
	)
}



func bindataTplProtobuf10headergotpl() (*asset, error) {
	bytes, err := bindataTplProtobuf10headergotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/protobuf_10_header.go.tpl",
		size: 368,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplProtobuf20messagegotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4b\x03\x31\x10\x85\xcf\xcd\xaf\x78\xf4\xa4\x87\xa6\x78\x2e" +
	"\x3d\xe8\x56\xc5\x8b\x14\xec\x4d\x84\xa6\xed\x74\x09\x24\x99\x25\xc9\x22\x75\x98\xff\x2e\xdb\xa5\xc8\x9e\xbd\xcd" +
	"\x83\xf7\xbe\x84\x6f\xb9\x84\x88\x7d\x4e\xd5\xd7\x8b\x2a\x32\x75\x99\x0a\xa5\x5a\xe0\x50\x7c\x6a\x03\x21\xf3\x37" +
	"\xce\x9c\xb1\x79\x42\x75\x87\x40\xd8\x8b\xd8\xdd\x70\xbd\xbb\x48\xaa\x7b\x8b\xc7\xbe\x32\x5a\x4a\x94\x5d\xa5\x93" +
	"\x35\x91\x4a\x71\x2d\x4d\xd0\x62\x66\x22\x0b\x64\x97\x5a\x82\x6d\x38\xf4\x31\x15\x55\x11\xf8\x33\xde\xca\x8b\xa7" +
	"\x70\xda\xf6\x87\xe0\x8f\xb0\xd7\x00\xd5\x61\xf2\x41\xd9\xbb\xe0\x7f\x28\xef\x2e\x1d\xc1\x0e\x28\x19\x1b\xaa\x58" +
	"\x0f\x61\xcb\x45\x15\x9f\x77\x2d\xb7\xdc\x65\xae\x6c\x8f\x7d\xa9\x1c\x93\x8b\x74\xbf\x9e\x8b\xbc\x72\xe3\x22\x05" +
	"\xdc\x66\x73\x0c\x5f\xf9\x23\x37\xd7\xfa\x8d\xff\xb5\x12\xa1\x74\x1a\x9f\x5f\x60\x3c\xd5\x98\xd1\x55\xc3\x21\xd0" +
	"\xb1\x7a\x4e\x53\x5f\xb1\x0f\xd5\x77\xa3\xaf\xf2\x0f\x61\x13\xbe\x98\x59\xa6\x8e\x86\xd2\x44\xe6\xc6\x55\x87\x35" +
	"\x1e\x56\x46\xcd\x6f\x00\x00\x00\xff\xff\xc5\x5a\x52\x54\xc3\x01\x00\x00")

func bindataTplProtobuf20messagegotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplProtobuf20messagegotpl,
		"_tpl/protobuf_20_message.go.tpl",
	)
}



func bindataTplProtobuf20messagegotpl() (*asset, error) {
	bytes, err := bindataTplProtobuf20messagegotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/protobuf_20_message.go.tpl",
		size: 451,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"_tpl/10_tables.go.tpl":             bindataTpl10tablesgotpl,
	"_tpl/20_entity.go.tpl":             bindataTpl20entitygotpl,
	"_tpl/30_collection_methods.go.tpl": bindataTpl30collectionmethodsgotpl,
	"_tpl/40_binary.go.tpl":             bindataTpl40binarygotpl,
	"_tpl/90_test.go.tpl":               bindataTpl90testgotpl,
	"_tpl/fbs_10_header.go.tpl":         bindataTplFbs10headergotpl,
	"_tpl/fbs_20_message.go.tpl":        bindataTplFbs20messagegotpl,
	"_tpl/protobuf_10_header.go.tpl":    bindataTplProtobuf10headergotpl,
	"_tpl/protobuf_20_message.go.tpl":   bindataTplProtobuf20messagegotpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"_tpl": {Func: nil, Children: map[string]*bintree{
		"10_tables.go.tpl": {Func: bindataTpl10tablesgotpl, Children: map[string]*bintree{}},
		"20_entity.go.tpl": {Func: bindataTpl20entitygotpl, Children: map[string]*bintree{}},
		"30_collection_methods.go.tpl": {Func: bindataTpl30collectionmethodsgotpl, Children: map[string]*bintree{}},
		"40_binary.go.tpl": {Func: bindataTpl40binarygotpl, Children: map[string]*bintree{}},
		"90_test.go.tpl": {Func: bindataTpl90testgotpl, Children: map[string]*bintree{}},
		"fbs_10_header.go.tpl": {Func: bindataTplFbs10headergotpl, Children: map[string]*bintree{}},
		"fbs_20_message.go.tpl": {Func: bindataTplFbs20messagegotpl, Children: map[string]*bintree{}},
		"protobuf_10_header.go.tpl": {Func: bindataTplProtobuf10headergotpl, Children: map[string]*bintree{}},
		"protobuf_20_message.go.tpl": {Func: bindataTplProtobuf20messagegotpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
