// Code generated by go-bindata. DO NOT EDIT.
// sources:
// _tpl/10_tables.go.tpl
// _tpl/20_entity.go.tpl
// _tpl/30_collection_methods.go.tpl
// _tpl/40_binary.go.tpl
// _tpl/90_test.go.tpl
// _tpl/fbs_10_header.go.tpl
// _tpl/fbs_20_message.go.tpl
// _tpl/protobuf_10_header.go.tpl
// _tpl/protobuf_20_message.go.tpl

package dmlgen


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTpl10tablesgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\xc1\x8e\xda\x30\x14\x3c\xdb\x5f\x31\x8d\x7a\x48\xaa\xd4\xdc\xa9" +
	"\x72\x68\xa9\xd4\x4b\xa1\xaa\xa8\xd4\xb3\x49\x5e\x82\xb5\x89\x1d\xd9\x8f\x5d\x50\xe4\x7f\x5f\x39\x61\x81\x1b\x27" +
	"\xfb\xcd\x1b\xcd\xcc\xd3\xd4\xce\x06\x46\x2e\xa7\xe9\x2b\xbc\xb6\x1d\xe1\x33\xeb\x43\x4f\x58\x57\x50\xff\xd2\x2f" +
	"\x20\x46\x29\xe6\xef\x4e\x0f\x34\x4d\xbf\xdc\x46\x0f\xd4\x5f\xd7\x09\x8b\x11\x15\xb2\x69\x7a\x44\xb2\x59\x92\x6c" +
	"\x13\xa3\x2c\xa4\x5c\xad\xb0\xa3\xb7\xab\xa0\x27\x3e\x79\x1b\xa0\xd1\x39\xd3\x1a\x6a\xf0\x4a\x3e\x18\x67\xe1\x5a" +
	"\xf0\x91\xb0\xbd\xec\xff\xfe\x5e\x6d\xb5\x37\xfa\xe7\x0f\x2c\x81\x42\x7d\xa4\x41\xa3\x75\x3e\x51\x92\xe0\x8c\x87" +
	"\x35\x1e\x8d\x43\x8c\x69\xf5\xfd\xc4\x0e\x1d\x59\xf2\x9a\xa9\xc1\xe1\x82\x66\xe8\x3b\xb2\x4a\xb6\x27\x5b\xdf\xa3" +
	"\xe4\x35\x9f\x51\x3b\xcb\x74\x66\xb5\x59\xde\x12\x6e\xe4\x00\xa5\x54\xd3\xf4\x8b\xf2\x9f\x91\x8d\xb3\x05\x72\x1e" +
	"\xf0\xe5\x86\x86\x92\xbc\x07\x79\xef\x7c\x81\x49\x0a\xd3\x82\x87\x32\x01\xa8\x90\x58\x77\x1b\x29\x84\x1e\x47\xb2" +
	"\x4d\x9e\xb4\x4b\x29\x84\x48\x84\xff\x86\x8f\x1b\x4f\x9a\x69\xe6\xa5\x34\x25\x9e\x55\x21\x04\x9e\xb4\x51\x22\xcb" +
	"\x66\x8f\x5b\x05\x45\x1a\x0b\xa5\x94\x14\xc5\xb7\x39\xe1\xa7\x0a\xd6\xf4\x29\xb6\x58\xea\x48\x63\xb9\x5c\x13\xe6" +
	"\x60\x7b\xd6\xf5\x4b\x4e\xde\x17\x52\x44\xf9\xc1\x4a\x17\x5a\xd3\xcb\x28\xdf\x03\x00\x00\xff\xff\x8d\x00\xf2\x86" +
	"\x3b\x02\x00\x00")

func bindataTpl10tablesgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl10tablesgotpl,
		"_tpl/10_tables.go.tpl",
	)
}



func bindataTpl10tablesgotpl() (*asset, error) {
	bytes, err := bindataTpl10tablesgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/10_tables.go.tpl",
		size: 571,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl20entitygotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x5f\x6f\xdb\xc8\x11\x7f\x26\x3f\xc5\x9c\x70\x77\x25\x7d\x32\x95" +
	"\x03\xda\x3e\xd8\x50\x01\x5f\xec\xa4\x6e\x6b\x5f\x10\xfb\xd0\x07\xc3\xa8\xd7\xe4\x50\x5a\x7b\xb9\xcb\xec\x2e\xad" +
	"\xe8\x08\x7e\xf7\x62\x76\x49\x49\x94\x28\xdb\xa9\x51\x5c\x80\x38\xb1\x76\x77\xfe\xfe\x66\xe6\x37\x9a\x4c\xa0\xae" +
	"\x93\x33\x69\xb9\x5d\x36\x0d\x68\x2c\x35\x1a\x94\xd6\x00\x03\xc3\xe5\x4c\x20\x68\xb5\x80\x5c\x69\x38\xfd\x05\x2c" +
	"\xbb\x17\x08\x77\x75\x9d\x5c\xd3\xff\x2e\x59\x81\x4d\x73\x97\x84\x93\x09\x9c\x54\x56\xc1\x0c\x25\x6a\x66\x31\x4b" +
	"\xea\x7a\xc1\xed\x1c\x92\xf7\xaa\x28\x50\xda\xa6\x09\xeb\x3a\x81\xc3\xa6\xa9\x6b\x94\x19\xfd\x73\x08\x3c\x87\xe4" +
	"\xef\xcc\x9c\x31\xb3\xfc\x87\x51\xf2\x82\x69\x33\x67\x02\x35\x34\x4d\x38\x99\x20\x33\xcb\x07\xa3\xe4\x11\xfd\x68" +
	"\x5f\x85\x76\x59\x62\xcf\x60\x63\x75\x95\x5a\xa8\xc3\xba\xd6\x4c\xce\x90\x34\x8a\xaa\x90\x86\x54\x7c\x54\xef\x59" +
	"\x81\xe2\x82\x2d\xef\xf1\x93\xe6\x4f\xcc\x22\x24\x1f\x38\x8a\xac\x69\x80\x8e\xaf\x97\x25\x5e\x56\x42\x40\xd2\x34" +
	"\x61\x10\xb4\x46\x49\x84\xe4\xca\xc9\xbd\x66\x33\x18\x8d\xc8\x6c\xf2\x79\xf5\x99\xfb\xf5\x10\x9c\x49\x64\xcd\x47" +
	"\xb5\xe9\x66\xf7\x71\x6b\xcf\x67\xcc\x51\xa3\x4c\x31\x7b\xaf\x84\xc0\xd4\x72\x25\x0d\xf8\x87\x1b\xf7\x9b\xd0\x45" +
	"\xd1\x18\x3e\x93\xff\x62\xc6\x9e\x4b\x83\xda\x9e\x9f\x42\x55\x66\xcc\xa2\x01\x3b\x47\xe0\x32\xd5\x48\x8a\xe0\xfc" +
	"\x14\x72\x72\x04\x5c\x98\xe9\x4c\x30\x63\x81\xbb\x57\x98\xc1\xf9\x29\x89\xcb\xb5\x2a\x80\x49\x38\xbf\xbc\x3a\xfb" +
	"\x7c\x0d\xaa\xa4\xec\x70\x25\x13\x38\x2f\x4a\xe1\x24\x19\xc8\x0a\x91\x74\xda\xbc\x7e\xd4\xc9\x76\x3e\xc3\xbc\x92" +
	"\x29\x44\x08\x07\x1b\xd1\x8f\x07\xec\x8d\x78\x06\x5c\xda\xbf\xfe\x39\x86\x3a\x0c\x86\xb2\xc2\x73\x60\x32\x83\xe4" +
	"\xdc\x7c\xfa\x27\xfd\x24\x4d\xe7\x9d\x63\x4d\x03\x98\xbc\x90\xb9\xe9\x2a\x77\x94\xb7\x88\x67\x31\x29\x6a\x61\x85" +
	"\x32\xa3\x7c\x85\x4d\x18\x52\x8e\x76\xd5\x53\x86\xcf\x8d\x93\xd5\x97\xec\x61\x07\x57\x68\x57\xfa\xd7\x3a\x0d\x5a" +
	"\x9f\x82\x8c\x59\xe6\xca\x81\x41\xd9\x3e\x27\x6f\x0c\xa6\x95\xe6\x76\x09\x06\xa5\xe1\x96\x3f\xa1\x8b\x3f\xbd\xee" +
	"\xc5\xee\xfb\x8d\xe0\x0d\x6a\x8a\xb2\x1d\x64\xc6\xfd\x87\x14\xd7\x57\xc4\x28\x0b\x03\x8d\xb6\xd2\x12\x30\xf4\xe0" +
	"\xfa\x38\xe8\x99\xbf\xb4\xe9\x9c\x03\xcd\x9b\xbd\x1b\xd4\x16\xc5\x3b\xde\x91\x3b\x9d\xa1\x2f\x78\x15\xb6\xe5\x02" +
	"\x5d\xa2\x7d\xc6\x2e\x58\xd9\xe6\x17\xf8\x1a\xd6\x5c\x5a\xd4\x39\x4b\x11\xfc\xe1\x05\x2b\x4b\xd4\xa0\xa4\x58\x42" +
	"\xc9\xb4\xe5\x4c\x88\xe5\x6b\x71\xbe\x56\x11\xa5\x05\x1c\x50\xc9\xac\xa4\xc6\x80\x5a\x2b\x4d\x7e\xf0\x1c\xd2\x22" +
	"\xb9\x50\x19\x46\x31\x4c\xa7\xd0\xbb\xe7\xa5\x7d\x46\x96\x9d\x08\x41\xb7\x3b\xb7\xd3\x62\xb7\x4c\x5c\x24\x3e\x54" +
	"\x32\xed\xc2\x14\xfd\xf8\x52\x74\xe2\xb6\x06\x92\x33\xad\xa3\x38\x0c\x9a\x30\x20\x9c\xa6\x45\x72\x89\x5f\x6d\xe4" +
	"\xea\x31\x30\x0b\x6e\xd3\x39\xa4\x70\x34\xa5\x13\xaf\x2f\x8a\x8f\x21\x85\x1a\x76\xcd\x08\x83\x20\x48\x99\x41\x18" +
	"\xd5\x75\xa7\x67\xb4\xba\x76\x22\x38\x33\x68\x9a\x66\x3c\x72\xcd\x6c\xd4\x5a\x70\x44\xcf\x82\xb4\x78\x83\x13\x24" +
	"\x21\xc3\x9c\x55\xc2\x7a\x69\x1d\x44\x28\xd4\x26\xb9\x54\xf6\x83\xaa\x64\x96\x5c\xe2\x22\x8f\x46\x37\x75\x9d\x7c" +
	"\x62\xe9\x23\x9b\x61\xd3\xdc\xf6\x06\x84\x77\x05\x7e\xf8\x02\x52\x59\xc8\xe9\xd1\x68\x0c\x69\x1c\x06\x14\xa0\x26" +
	"\xdc\x12\xfc\x6f\x6e\xe7\x57\x96\xa5\x8f\x51\x5a\xf8\x40\xc6\x6d\xf5\x9c\x15\xa5\x5d\x02\x16\xa5\xe5\x68\x80\x09" +
	"\xe1\x2a\xc6\xd5\x80\x01\x95\xbb\xdf\xd2\x4a\x6b\xea\xce\xea\xfe\x01\x53\x9b\xc0\x89\x30\x0a\x1e\xa5\x5a\x48\x60" +
	"\x06\x3e\xa3\x41\xbb\x0f\x61\x4e\x7c\x14\xf7\x3e\x85\x1a\x0e\xd0\xb5\xbb\xd5\x47\x75\x73\x0c\x9d\xc5\xed\xcc\xa8" +
	"\xeb\x64\x3d\x59\xb6\x67\x78\xba\x3a\x01\x37\x3b\x7b\x83\xbc\x3f\xc7\x49\xd6\xa5\xb2\x60\xe7\x1a\x59\x06\x86\xe5" +
	"\xb8\x53\x1e\xff\xe7\xb1\xde\xf3\x63\x35\xda\x83\x53\x6a\x4b\xeb\x3f\x41\x70\x73\xdb\x0b\xd3\x9d\x13\x38\xa2\xee" +
	"\x35\x56\x05\xb7\x94\xa4\xe5\xe8\x2e\x0c\x7e\xc1\x5c\x69\x5c\x17\x6f\x40\xb1\x8f\x2a\x37\x9f\xc6\x5b\x09\xf0\x45" +
	"\xdc\x8a\x3a\xa4\xd7\x27\xb9\x45\xbd\xd1\x5c\xbe\xe9\xb5\xcf\xcd\x25\x2e\xb6\xdd\x4a\x35\xba\x79\xce\x40\xe2\x02" +
	"\xb8\xe4\xd4\x89\xf8\xef\x98\x6d\xe4\x6a\x4f\x5b\xda\x95\xd6\x02\xa6\xa7\xc0\x8d\xdd\xc9\x41\x18\x04\xd7\xbf\x9e" +
	"\xfe\x1a\xf1\x0c\x59\x7c\x04\x95\x41\x60\x30\x13\xea\x9e\x09\x28\x95\x12\xb0\x98\x73\xea\x04\x4c\x82\xc6\x19\x37" +
	"\x16\xb5\x43\x07\xb2\x74\xee\xb1\x62\xe7\x18\x06\xc1\xbd\x8b\xe1\x84\x51\x30\xa0\x60\x65\xea\x0b\x8a\x0c\x72\xb0" +
	"\x32\x0a\xec\x9c\x59\x3f\x3f\xf0\x09\x32\x85\xc6\xd5\x9a\x44\xcc\xc0\x2a\x60\x8e\x23\x84\x41\xe0\x25\xf3\x02\x13" +
	"\xb0\x73\x2e\x1f\x09\x29\xdc\xfe\xc9\xc0\x42\x69\x3b\x07\x53\xa5\x73\x9a\x3b\xcc\x5a\xd4\x32\x09\x83\x83\x89\x9b" +
	"\xe4\x5d\x85\xfe\xb8\xe5\x28\xb5\x33\x42\xc6\x11\x14\xec\x11\xa3\x3e\x26\xc6\xf0\x6e\x0c\x7f\x89\xc7\x54\xe2\x7b" +
	"\xa9\x95\xd5\xec\x09\xb5\x71\xe4\x4a\xab\x6a\xe6\x89\x94\x11\x3c\xed\xc6\x9e\xab\xa1\x0c\x5b\x72\xc2\xe5\x8c\x92" +
	"\x46\xd2\xe8\xb5\xf2\xb1\x42\xa7\xb2\xab\xeb\x34\xdd\xc9\xc8\xcb\x34\x89\x67\x3f\xfd\x14\x06\x4f\x4c\xc3\x83\xff" +
	"\x14\xa6\xf0\xb3\x6f\xdf\x9c\x3a\xb5\x40\x19\xa5\x69\x42\xde\xc6\x70\x08\x3f\x1f\x03\x87\xbf\x4d\xe1\xdd\x31\xf0" +
	"\xc3\x43\xd7\xd7\xdb\xd3\x1b\x7e\x9b\x0c\x2b\x3b\x84\x07\xea\x79\x0f\xa4\xc8\x85\xe4\x19\x73\x4d\xca\xe4\xde\x71" +
	"\x37\xee\x77\xae\x31\xf0\xec\x2b\x54\xad\x2f\xbd\x49\x98\x26\xdb\xf5\x07\xdf\x4d\x41\x72\x3f\xfc\x78\x4e\xb7\xdd" +
	"\x1c\xda\xbd\x18\xf1\xec\xeb\x18\x30\x3e\x76\x77\x36\x5e\xed\x6d\xd7\xa8\xf5\xba\xa7\xaf\x65\x63\xd2\x1b\xdd\xbb" +
	"\x02\x9f\x97\xd7\x74\x9e\x6c\xf7\x82\x7d\x8e\x6c\xdd\x7b\xa3\x1f\xed\x25\xc9\x45\x0b\xe2\x61\xaa\xd3\xcb\x0f\x91" +
	"\x9c\x15\xf7\xd9\xc7\x6f\x06\xd3\xfe\x4a\x92\xd3\x52\x88\xa2\xa5\x10\x9e\xed\x1c\x43\x41\x67\x8e\x2b\xec\x67\x3d" +
	"\xe3\x7d\x67\x57\xe8\xc6\xbc\x03\xfc\x18\x90\x44\x7b\x8e\xd1\xe2\xda\xc7\xac\x17\xe9\x3e\x48\xc7\x80\xe3\x16\x85" +
	"\x11\x8f\x07\xe2\xfd\x52\xc0\x29\xdc\xf4\x77\xd7\x83\xab\x94\xc9\x23\x9f\x67\xc7\x98\x2a\x69\x89\xdb\xbd\xf3\x72" +
	"\x3b\x03\xa7\x9d\xa9\x37\x47\xef\x6e\xbd\xa8\xc0\xf9\x21\x71\x11\x6d\x8e\x8a\x6d\xc4\x0c\xf8\xd1\xa9\xf9\x9f\x60" +
	"\xb3\x61\x11\x81\x41\x66\x5d\xe7\x20\x1c\x0e\xf9\xb7\x06\xc1\x56\x26\xfa\xcc\xf1\x59\xea\x48\xe7\xbb\xeb\x56\xf2" +
	"\x9b\xe4\x5f\x2a\xec\x10\x7b\xf8\x56\x3e\x09\x4e\xf1\x36\xa9\x34\xe4\xe0\xee\xaa\x61\xa2\x38\x49\x92\xb8\xb3\x6c" +
	"\xc5\x2a\x69\x36\xc2\x3e\x5b\x79\xce\xdd\x9e\xee\xd9\x6f\x10\x4c\x26\x20\x15\xd0\x08\xa5\x61\xe5\xe6\x1c\x37\x6e" +
	"\xb2\x61\xf6\x07\xfb\x02\x07\x93\xb7\xd3\xe4\x1e\x71\x78\x86\x2a\x77\xd5\xb1\xa1\x6b\x47\xd3\x55\x55\x96\x4a\x53" +
	"\x93\x19\xd4\xf6\x9b\xf4\x44\x98\xfa\xc5\x11\xfc\xf0\x65\x34\x26\x86\xc7\xe5\x2c\x2a\xe2\x78\xb3\xdb\x75\xc4\xdb" +
	"\x6d\x7b\xcf\x01\xca\x53\xd6\x81\x68\xad\x76\x5a\xd6\x0e\x73\x5a\xd7\x5d\x2d\x18\x47\x48\xba\x11\x2f\x04\x3c\x31" +
	"\x51\xa1\x19\xfa\x06\xab\xd7\x29\xbf\xdf\x6a\x95\x43\x29\xd2\x68\x21\x49\x92\xdd\xed\xfd\xe6\x76\x68\xe7\xe5\x39" +
	"\x99\x49\x9d\x64\x63\x14\xc1\xb4\x23\x33\xdb\x4f\x1c\xa1\xd9\xe4\x01\xeb\x0d\xef\x3f\x7b\x3b\xa6\x97\xd8\xb6\x01" +
	"\x8d\x76\xbc\xb9\x62\xaf\x77\xae\xcd\xe8\x6b\xb4\x61\x03\x1d\x31\x1f\xf8\x0e\x65\xa8\x50\xf6\xe5\xe1\x1e\x85\x92" +
	"\x33\x17\x74\xb7\x1e\x79\x80\xdd\xad\xeb\xe5\x8e\x5e\x12\xd5\x7a\x5d\xc6\xdc\xf2\x5e\x39\x0c\xb4\x99\xf3\x9b\x17" +
	"\xb3\xad\x6c\x97\xc8\xeb\xf9\xea\x74\xc1\x85\x80\x7b\x5a\xd3\x84\x45\x8d\x99\x9f\x8c\x92\x56\x7f\xe0\x12\x18\x7c" +
	"\x54\xc4\x69\x13\xb8\x54\xb4\x16\x7d\xa9\x50\x2f\x61\x86\xd6\x90\x1c\xfc\x8a\x69\x45\x50\xf8\x26\x68\x78\x88\xbe" +
	"\x02\x20\xdb\xe0\xf8\x46\x60\x3c\x03\x8a\x0d\xfa\x7f\x04\x0c\x34\x56\xc6\xed\x7b\x05\x2b\x5d\xb0\x69\x17\xc8\x78" +
	"\xee\xbe\x97\xb4\xc0\xc4\x4c\x69\x6e\xe7\x85\x81\x0c\x29\xe4\x44\x73\x69\x5f\x24\x2e\xcc\x7f\xa7\x1d\xa0\x5b\x6f" +
	"\x5b\x68\xb9\x64\x24\x70\xa5\x0a\x24\x3a\x4f\x59\xcb\x95\x9e\x10\x16\x85\x52\x25\xe8\x4a\x1a\xc8\x99\x5b\x29\xec" +
	"\x9c\x51\x9c\x29\xc8\xc4\xe8\xa9\x65\x65\x55\xf9\x7e\x8e\xe9\x23\x61\xd6\x39\x55\xb0\xf2\x66\xd3\xad\xdb\x7b\xa5" +
	"\xc4\x8e\x63\xcf\x43\x9d\xe7\xf0\x5d\x27\xf8\xc6\xa3\xfc\x93\xe6\x85\xfb\xb2\xaa\xab\xa1\xdb\xd5\x0c\x1d\xac\x8a" +
	"\x9d\xfb\xae\xf3\xbd\x2c\x74\x0a\x56\x57\xb8\x4d\xda\xfa\x85\xf4\xdf\x00\x00\x00\xff\xff\x4b\x33\x8c\x69\x68\x17" +
	"\x00\x00")

func bindataTpl20entitygotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl20entitygotpl,
		"_tpl/20_entity.go.tpl",
	)
}



func bindataTpl20entitygotpl() (*asset, error) {
	bytes, err := bindataTpl20entitygotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/20_entity.go.tpl",
		size: 5992,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548829845, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl30collectionmethodsgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x95\x41\x8f\xa3\x38\x10\x85\xcf\xf0\x2b\xde\x61\xb5\x82\x6d\x42\xb6" +
	"\xaf\x99\xc9\x61\xb6\x67\x66\x35\xe7\xde\x3d\x45\xd1\xca\x31\x45\x70\x62\xec\xac\x31\x1d\x05\xc4\x7f\x1f\xd9\x40" +
	"\x42\x3a\x91\x46\xad\x48\x7d\x80\x2e\x5c\xf5\xea\x7b\x55\xce\x7c\x8e\xef\x42\x5a\x32\xff\x14\xa2\x42\xee\x1f\x2b" +
	"\xd8\x82\xc0\x6b\x63\x48\x59\x54\x52\x70\xc2\xe6\x84\x83\xa1\x4c\x70\x66\x09\x39\x8e\xc2\x16\xba\xb6\x28\xa9\xd4" +
	"\xe6\x04\x26\xa5\xe6\xcc\x0a\xad\xd2\x70\x3e\xc7\x97\xda\x6a\x6c\x49\x91\x61\x96\x32\xbc\x09\x86\xac\x94\x5b\x52" +
	"\x69\x98\xd7\x8a\x23\xe2\x1c\x7f\xb4\x6d\xfa\xa2\xa5\x24\xee\x8e\x75\x5d\x3c\xe8\x88\x72\xb8\x6f\x22\x17\xff\xa6" +
	"\xac\xb0\x27\x17\xdb\x68\x2d\xe3\x9b\x33\x68\xc3\x60\x83\xc5\x12\x9c\xa7\x5f\x99\x65\xab\xc5\x9f\xeb\x30\xc8\xb5" +
	"\xc1\x7f\x09\xc8\x05\x0c\x53\x5b\x1a\xc3\xee\xf3\x40\xe4\xc8\x23\x8a\xfd\x73\xb0\xc1\x12\xec\x70\x20\x95\x45\x9b" +
	"\x04\x14\x87\x41\xd0\x85\xee\x6f\x3c\xb1\xc4\x26\x0c\x0c\xd9\xda\x28\x70\x1e\x76\xa1\x6b\xef\x1b\xe3\x05\x8e\x42" +
	"\x4a\x98\x5a\x79\xb5\x4e\x0e\x72\x68\xe5\x48\x40\x58\x2a\x2b\x08\x85\xd5\x7a\xda\xc5\x03\x68\x5c\xc5\xbb\x60\xee" +
	"\x33\x71\x04\xc4\xfd\xf6\xf3\x68\x64\x25\xd6\xb1\x6f\xf5\xaa\xbb\xb6\x1d\xce\xb8\x9c\x75\xa9\xaa\xf4\x5f\x25\xfe" +
	"\xaf\x69\x78\xc3\xac\xeb\xae\x74\xfe\xf6\x4e\xe8\xab\x36\xf6\xaf\x53\xdb\xfe\xad\x5f\x58\x49\x12\xe9\x77\x41\x32" +
	"\xeb\xba\xc8\x03\xaf\xb4\xb1\xe9\xab\x9b\xa7\x51\x45\xe2\x5b\x12\x09\x76\x10\xca\xf6\x3e\x7b\x9d\x67\x55\xa3\xd8" +
	"\xf4\x36\x29\x3e\x9f\xe3\xbb\x7b\xf1\x30\xe8\xe2\xb0\x43\xdb\xce\x40\xca\xbd\x3b\x03\x5e\x6a\x3b\x78\x47\xa5\x7e" +
	"\xa3\xd1\x2c\xd8\xc2\xe8\x7a\x5b\x60\x37\x7b\x7e\xc0\xa8\x97\xda\x4e\xba\xb9\xe7\x4d\x33\x99\x57\xcc\xe7\xe0\xfa" +
	"\x70\x1a\x76\xac\x20\x96\x91\x09\x03\xf7\xaf\xa8\x59\x89\xc5\x3a\x41\xb3\xda\x2d\x9c\x51\xce\xd2\x7d\x02\xe5\x4e" +
	"\x4b\x52\x51\x13\xcf\x76\x4f\x22\x19\x9e\x3f\x61\x8f\xcf\x50\x9f\xb0\x7f\x7a\xf2\xf8\x9a\xd5\x7e\x8d\x25\x94\x90" +
	"\xae\x86\x75\xbb\x5d\x15\xba\x96\x19\xd8\x9b\x16\x99\x5f\xf0\x61\x77\x25\xb1\xbd\x1f\x84\x06\x4b\x34\xab\xc5\x25" +
	"\xfb\x7a\xba\x07\xcd\xed\x1e\xbc\x1e\xd9\xa1\x67\x59\x31\x2b\xaa\xfc\xe4\xd3\x7a\x93\x7f\x28\x4b\x26\x67\x9c\x1e" +
	"\x60\xe9\xd2\x4f\x60\xb6\x93\x61\x48\x26\xc6\x63\x39\x79\x49\x26\x1f\xa1\x57\xf9\x95\x24\x59\xba\xf2\x9c\x29\x6f" +
	"\x3b\x72\xa3\xcb\x5e\xb3\xe3\xff\x80\xd4\xbe\x46\x24\x3e\x68\xfb\xb9\xf4\xd9\x7a\x52\xd9\xc5\x61\xcc\xf0\xec\x2d" +
	"\x18\x49\x90\xca\xe2\xf7\xe3\x21\x9e\x9e\xfd\x80\x34\x2b\x52\xd9\xc7\x3c\x1f\x0c\x77\xe7\x7e\xe1\xf4\x0f\x55\x91" +
	"\x19\xf6\xe6\x20\x19\x27\x30\x28\x3a\xf6\x14\x99\xc5\x41\x57\xc2\xdf\x81\xe2\x01\x88\x7d\x91\x48\x61\x7a\xc3\x25" +
	"\x78\x1c\x6a\x73\xb9\xe5\x9b\x04\xbf\x4f\xb2\xb7\xdd\x84\xa7\x03\xe9\x89\x0e\x3c\x85\xa7\xf9\x0b\x32\x5f\x7c\xde" +
	"\x9e\x0c\xcb\xb2\x77\x5c\x9c\x16\x17\xd6\xf9\x8d\xfe\x07\x40\xf5\x35\x23\x85\x34\x4d\xaf\x7f\x26\xef\x41\xba\xc8" +
	"\x1f\x18\x8c\x57\x2f\x54\x9a\xa6\xf1\x75\x4b\x3f\x03\x00\x00\xff\xff\xd6\x0d\x0f\x8b\x0f\x08\x00\x00")

func bindataTpl30collectionmethodsgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl30collectionmethodsgotpl,
		"_tpl/30_collection_methods.go.tpl",
	)
}



func bindataTpl30collectionmethodsgotpl() (*asset, error) {
	bytes, err := bindataTpl30collectionmethodsgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/30_collection_methods.go.tpl",
		size: 2063,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl40binarygotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc3\x30\x10\xc6\xf1\x19\x3f\xc5\x37\x30\xc4\x08\xf9\xde" +
	"\x01\x26\x86\x8e\x4c\x88\xc1\xb9\x5c\x53\x4b\xc9\x5d\x75\xb5\x91\xaa\x28\xef\x8e\xa0\x50\x51\xa6\x76\xf6\xdf\x9f" +
	"\xee\x47\x84\x57\x9d\xb3\x1f\x76\x79\x7a\x2a\x9a\xfd\x88\x32\xef\x27\x99\x45\xeb\x01\xa2\x6c\x43\xd1\x31\x9d\x9e" +
	"\xce\xa5\x78\x0a\xdb\xa6\x8c\x8e\x19\x0f\xcb\x72\x9f\x9e\x6d\x9a\x84\x6b\x31\x5d\xd7\xf8\x7f\xb2\x1b\x72\xcd\x78" +
	"\x7b\xef\x8f\x55\x22\xc4\xdd\x1c\x4b\xb8\x73\xa9\xcd\x15\xcc\xe9\xdc\x7f\x97\x11\x44\x78\xf9\xbd\x42\x06\x7c\x94" +
	"\x8c\xb1\xd4\x5d\xeb\x13\xdb\x4c\xa3\x8d\x46\x7b\xb7\x6a\x7d\xdb\x86\x35\x04\x22\x6c\xae\x24\x6c\xae\x03\x5c\xcc" +
	"\x75\x11\x7f\x05\x8f\x5f\x82\x93\x22\x5e\x32\x7e\x7e\x75\x11\x37\x0a\x3e\x03\x00\x00\xff\xff\x22\xed\xb8\x7c\x86" +
	"\x01\x00\x00")

func bindataTpl40binarygotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl40binarygotpl,
		"_tpl/40_binary.go.tpl",
	)
}



func bindataTpl40binarygotpl() (*asset, error) {
	bytes, err := bindataTpl40binarygotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/40_binary.go.tpl",
		size: 390,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTpl90testgotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6d\x6f\xdb\x36\x10\xfe\x4c\xfd\x8a\x9b\xb6\x14\x54\xaa\x32\xc9" +
	"\x30\x14\x98\xbb\x7e\x68\x6c\xa7\x33\xea\xbc\x3a\x68\x07\x14\x45\x40\x4b\x67\x9b\x08\x4d\xba\x24\x15\x27\x10\xf4" +
	"\xdf\x07\x52\x92\x5f\x9a\x38\x6d\x81\x01\xfb\xd0\xc6\x12\xef\x1e\xde\x3d\x77\xf7\x9c\x26\x85\xca\xe0\x1a\xad\x3b" +
	"\xc3\xe5\x35\x1f\x4b\xb4\xd4\xc1\xbe\x43\xeb\x84\x9a\xb2\xeb\x04\xca\x88\xe4\x63\xe8\xbc\x85\x7c\x2e\xfd\x6b\x76" +
	"\x5a\x58\xd7\xd5\x4a\x61\xe6\x7a\xc7\xd4\x25\x11\xc9\x71\x82\x66\x75\xde\x95\xda\x22\x75\x29\xe4\xe3\x24\x8a\x48" +
	"\x59\x2e\x85\x9b\x01\xf3\x77\x8c\x2e\x87\xbd\x62\xbe\x78\x2f\xf5\xf8\x82\xbb\x59\x55\x6d\x7b\x36\xc7\x43\xcd\x73" +
	"\xef\x1f\x97\x25\xab\xaa\x38\x85\x17\xdf\x18\x9c\x2f\x9c\xd0\xca\x96\x11\x21\xa3\x5b\xb1\xe8\x1d\x77\x25\x72\x55" +
	"\x2c\x3a\xe0\x4c\x81\x69\x44\xaa\x84\xf5\x3c\xb2\xc1\x9c\x26\x65\x89\x2a\xaf\xaa\x28\x22\x99\xbb\x4f\x21\xe3\x2a" +
	"\x43\xe9\x13\xca\xb4\x72\x78\xef\xd8\x27\xe1\x66\xd7\x62\x8e\xba\x70\xb4\x7d\x77\xcc\xb3\xdb\xa9\xd1\x85\xca\x69" +
	"\x92\x82\x13\x73\x64\xa7\x42\x15\x0e\xf7\x7f\x5f\x25\x5c\x23\xd1\x24\x22\x6e\x2c\x6d\x0a\x68\x8c\x87\x5d\x13\x19" +
	"\xee\xcb\x73\x19\x6e\xf0\x94\x5d\x68\x2d\x69\x3e\x4e\x92\x88\x70\x6b\xd1\x38\x76\xa6\xfb\xc6\x68\xe3\xd3\x45\x63" +
	"\x3c\x5f\x6e\x2c\xcf\xf8\x1c\xad\x87\xf2\xb8\xac\x01\x4b\x22\x62\xb5\x71\x6c\xe4\x8c\x50\x53\x4b\x5b\xbb\x35\x56" +
	"\xff\x9e\x67\x4e\x3e\x78\xac\xcf\x5f\x6c\x30\x2b\xa1\x2c\x5f\x81\xe1\x6a\x8a\xf0\x9b\xf3\x40\x1e\xb6\x81\x84\xaa" +
	"\x8a\xcb\xb2\x79\xf2\x58\x9e\x6c\x6f\x1f\xf8\xaa\x52\x58\x5f\x11\x11\x9f\x5c\x13\xd0\x47\x2e\x45\xce\x1d\xfa\xfc" +
	"\x76\x67\x42\xee\xb8\x81\x85\x85\xfd\x85\xc5\x22\xd7\x6c\x84\xe6\x4e\x64\x18\x91\x85\x85\xb7\xd0\xbc\xf4\xbd\x74" +
	"\x86\xcb\xe6\x8c\x1e\xa6\xf0\xa2\x39\x69\x6b\x3c\xe4\x6a\xda\x81\x38\xc7\x38\x3d\x91\x9a\xbb\x53\x7e\xdf\xc3\x4c" +
	"\xcc\xb9\xb4\x9d\xd7\x55\x1a\x11\xd2\x38\x84\x2a\xf2\xe9\x09\xbf\xc5\x93\x42\x65\x34\x5e\xe2\xd8\x0a\x87\x37\x22" +
	"\x8f\x53\xf0\x6d\x4e\xe7\xfc\x7e\x88\x0a\x84\x72\x09\x50\xa1\x1c\x9a\x09\xcf\xb0\xac\x42\xc4\xda\x84\x5e\x27\xc4" +
	"\xa0\x2b\x8c\x82\xa3\x14\x94\x90\x11\x21\x55\xf2\xdc\x2d\xd6\x69\xf3\x5f\xdd\xe1\xb9\xef\x16\xd6\xe9\x79\x57\xe7" +
	"\x08\xf1\x93\x24\x35\xcc\xc4\xf0\xaa\xaa\x22\xe2\x4b\x73\x70\x00\xd7\xe7\xbd\x73\x30\x85\x02\x37\xd3\x16\xc1\x0f" +
	"\x8b\x05\xa1\x60\xc1\x0d\x97\x12\x65\x44\x9e\xef\x83\x88\x38\x76\x55\x28\x1a\x97\xe5\x7b\xdd\xe5\x73\x94\x5b\x6d" +
	"\x71\xd3\x57\x4e\xb8\x87\x36\xc7\x47\x02\xe1\x9b\x76\xd5\xaf\x3e\xdc\xe0\x4b\x57\x08\x4f\xa3\xfa\xd8\x09\x2a\x37" +
	"\x38\x1b\xf5\xaf\xae\x1b\x7f\x36\x50\xbe\x9d\x68\xc2\x8e\x0b\x21\xf3\x8f\x5c\x16\x75\xf3\xaf\x2d\x47\x6e\xee\xde" +
	"\x79\xf3\xd5\x1b\x76\x61\x70\xc1\x0d\xfa\xea\xbc\x33\x53\x5b\x77\x66\xed\x33\xea\x0f\xfb\xdd\x15\xfa\x08\x25\x66" +
	"\xee\xf8\xe1\xe2\x03\x8d\xf7\xe3\x64\xd3\x64\x13\xb6\x7e\xc3\x56\x78\x09\xeb\xdf\x2f\xb8\xca\x2f\x24\xcf\xf0\x6f" +
	"\x2d\x73\x34\x96\x26\x70\x70\x00\xad\x09\x4c\x51\xa1\xe1\x0e\x2d\xb8\x19\x42\xc6\xb3\x19\xe6\x30\xba\x1c\x42\x3d" +
	"\x89\x10\x54\xf0\x16\x1f\x20\x8e\xb7\x22\xab\xc5\xc1\x9b\x7f\xc0\x07\x1a\xdb\x10\xe0\xcd\xd1\x61\x9c\xb0\x4f\x33" +
	"\x34\x68\xd9\x15\x5a\x74\x81\x82\x9b\x14\x6e\x56\x3a\xb3\x81\xe0\xed\x68\x68\xa0\xba\xc4\xac\xab\x65\x31\x57\xb6" +
	"\xaa\xca\x52\x4c\x80\xab\x1c\xd8\xc0\x5e\x7c\xf0\xff\xbf\x2b\x9c\x1e\xa8\xcc\xe0\x1c\x95\xab\x2a\x2f\xbe\x8d\xb9" +
	"\xaf\x3e\x3b\x11\x28\xf3\xaa\x8a\x13\x36\x44\x6b\xcf\x4d\xff\x6b\xc1\x25\x4d\xd8\x40\x39\x7a\x74\xd8\xb4\x69\x10" +
	"\x88\xf0\xc7\x77\x61\xc2\xae\xf5\xe8\x72\x58\xf3\x11\x7e\x7e\x43\x86\xc2\xe5\x73\x84\xac\x52\x8e\xc8\x6e\x59\x24" +
	"\x13\x6d\x40\xf8\xbc\x0f\xdf\x80\x80\xbf\xe0\xcf\x37\x20\x5e\xbe\xac\xc7\xc9\x37\x82\xf2\x67\x0a\x97\x74\x57\xb3" +
	"\x11\x42\xc4\xa4\x25\x6f\x61\x99\x9f\xe1\x1e\x77\x9c\x06\xef\xe4\x4d\x38\xfa\xe5\xad\x9f\xc8\x1a\x95\x38\x16\xa2" +
	"\x98\xd0\x78\xd0\xfb\xe7\xf3\x5e\xfe\xa5\x03\x7b\x2f\xef\xe2\x14\x44\xab\x71\xab\x51\xf6\x3f\xfd\x8a\x21\x44\x0e" +
	"\x7a\x9b\xdb\xb2\x3b\xc3\xec\x76\xc8\xad\xab\xfb\x7a\xd0\x0b\x9b\x2d\xe0\x76\xb6\xf7\x2e\x7b\x7e\xf6\x12\xba\x3d" +
	"\x00\xec\x0a\x33\x6d\x72\x1a\xc7\x29\xd4\x19\xb0\xfe\x3d\x66\xdd\x7a\x81\x85\x09\x48\x5a\x6e\xb6\xbc\xea\x66\x6a" +
	"\x8e\xce\x0b\xf7\x03\xbc\x19\xbd\xec\xea\x42\xb9\xc7\xbd\x57\x83\x0e\x94\x7b\xfd\x87\xa5\x72\xd0\x4b\x58\xd8\xde" +
	"\x61\xf3\xd5\xf0\x01\x60\xd7\x8e\x20\x4f\xec\xae\x42\x78\x34\x7a\x94\xa4\xb0\xbe\xd7\x57\x60\x2f\xef\xc0\x55\xf3" +
	"\x06\x72\x91\x83\xd2\x0e\xe6\xdc\x65\x33\x5f\x92\x3a\xa5\x0d\x99\xcb\x74\xd0\xa4\x5a\xee\xda\x89\x08\x5a\x17\xec" +
	"\xc4\x24\x98\xb0\x81\xad\x37\x6a\xad\xa7\xe4\x51\x48\x43\x54\x53\x37\xf3\x81\x95\x65\x70\xe8\xce\xb8\x39\x0d\x2a" +
	"\x3f\x75\xb3\x3a\x75\xbf\x2c\x5f\x84\x22\xb0\xb2\x6c\x2e\x6c\xc8\x3c\xe5\x0f\x63\xbc\x30\xe2\x8e\xbb\x3a\xa6\x76" +
	"\xc2\x6a\x8f\xf3\xc2\xfd\x8c\x4b\x4b\xc3\x0f\xbb\x80\x9d\xe9\x42\xe6\x2b\x9a\x7c\x89\x1a\x02\x5e\x01\x4a\x8b\x20" +
	"\x26\x81\xc7\x96\x8b\x07\xeb\x70\xfe\x11\x8d\x15\x5a\x61\xbe\x8b\x94\x50\xc1\x9f\xcd\xf7\x7f\x4f\x37\x7c\x06\x7e" +
	"\xf3\xe0\xff\x3d\xfa\x72\xdd\x9e\x99\x76\x93\x74\xeb\x86\x3a\xc3\xe5\x2a\x9e\xae\x96\x5e\xbb\x84\x56\xf5\xb4\x04" +
	"\x95\xfe\xde\xb4\xec\x16\xfc\xad\xd9\xe9\x6a\x99\xec\x56\x44\xaf\x4e\x43\x3d\x9d\xd0\x78\x1d\x03\x48\xcd\xf3\xd5" +
	"\xd0\x74\x60\xcf\x7f\x95\xb4\x8f\xdb\xdb\xb6\x5e\x76\x9b\x2b\x74\x3b\x2a\xa3\x97\x37\x99\x77\xbb\x09\x20\x12\x15" +
	"\xad\x43\x62\x5e\x32\x93\x84\x5d\xe1\xc2\xef\x42\x9a\xb0\x11\xba\x76\x2a\xe9\x63\xbb\x5d\x9b\xf9\x67\x64\x72\x27" +
	"\xdd\xdf\x13\x45\x4f\xe1\x93\xaa\xf8\xdd\x8a\xaf\xe9\xf5\x41\x81\x08\x51\xc1\xa0\xe7\x3f\xec\x74\xc3\x6c\xd3\x5c" +
	"\xad\x61\xf3\x19\xf3\xb5\x40\x23\xd0\x76\x60\xef\xd7\xbb\x78\x03\x98\x05\x72\xf3\xcb\xfa\x98\x26\x9b\xae\xcd\x37" +
	"\xca\x63\xd7\x66\xc1\x3f\x76\xf5\xba\xbc\x6e\xe3\x2a\xfa\x37\x00\x00\xff\xff\x95\x87\x89\x31\xc7\x0d\x00\x00")

func bindataTpl90testgotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTpl90testgotpl,
		"_tpl/90_test.go.tpl",
	)
}



func bindataTpl90testgotpl() (*asset, error) {
	bytes, err := bindataTpl90testgotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/90_test.go.tpl",
		size: 3527,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548954831, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplFbs10headergotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x43\x31\x10\x05\x7b\x9f\x62\x15\xd1\xf2\xdd\x13\x51\xd0" +
	"\xd1\x81\xc4\x09\x36\xf6\xc3\x58\xf1\xdf\xfd\xac\x6d\x0a\x56\xbe\x3b\x22\x07\x48\x33\xd5\x68\x26\x46\x7a\x99\x43" +
	"\xa9\x40\x60\x3c\x90\xe9\xa7\x32\x95\x3a\xbe\xe6\x65\x4b\xba\xc7\xa4\x86\x3e\xd4\x50\x35\x1e\xd7\x12\xfb\x77\x8b" +
	"\x79\x6f\x05\x12\x82\xf0\x8e\x7e\x70\x02\xb9\x6f\xef\x9c\xae\x5c\xb0\xd6\x39\x84\x2a\xa9\xcd\x0c\x3a\xdd\x0b\x0d" +
	"\x35\x2e\x88\x32\x5b\xbb\x61\xfb\xbc\xf4\xd3\x39\x04\x77\x63\x29\xa0\x07\x3d\x46\xa7\xa7\x67\xda\x3e\x60\x95\x5b" +
	"\xfd\x85\xbd\x82\x33\xec\xed\x18\x55\xa5\xd3\xe3\x5a\xc1\xfd\xe6\xfd\x6f\xdd\x21\x79\xad\xf0\x17\x00\x00\xff\xff" +
	"\x85\x4a\x09\x56\xd4\x00\x00\x00")

func bindataTplFbs10headergotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplFbs10headergotpl,
		"_tpl/fbs_10_header.go.tpl",
	)
}



func bindataTplFbs10headergotpl() (*asset, error) {
	bytes, err := bindataTplFbs10headergotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/fbs_10_header.go.tpl",
		size: 212,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplFbs20messagegotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4a\x03\x41\x10\x86\xeb\xdb\xa7\x98\x17\x70\xd3\x27\x95\x5e" +
	"\xd4\xce\xc6\x74\x22\x64\x34\xbf\xc7\xc2\xdc\xee\xb1\x3b\x87\xc4\x61\xde\x5d\xc2\x5a\x24\xad\xdd\x0f\xf3\xf1\x31" +
	"\xdf\x66\x43\x66\xf1\x31\x6b\xd2\xb3\x3b\x55\x2c\x15\x0d\x59\x1b\x31\xb5\x94\x27\x01\xd5\xf2\x4d\x5f\xa5\xd2\xfe" +
	"\x81\x94\x3f\x04\x74\x34\x8b\x87\xcb\x7a\xe1\x19\xee\xc7\x48\xf7\xab\x16\x9a\x90\x51\x59\x71\x8a\xa1\x73\xd7\x62" +
	"\x0b\x83\xd9\x1d\x55\xce\x13\x28\x8e\x45\xd6\x39\x37\xf7\x30\x0c\x66\xcf\x65\xe4\x19\x42\xf1\x29\x41\x4e\xee\x5b" +
	"\xb3\x57\xd4\xc4\x92\x7e\x50\x0f\xe7\x05\x14\xdd\x77\xd4\x5f\xfd\x63\xba\x0e\xf9\x32\x3d\x84\x7e\x1b\x8b\x08\x3e" +
	"\x35\x95\x7c\x9b\x32\xaf\xa2\x69\xe9\x29\xed\xdf\x2d\x37\x76\x0b\xc3\x9e\x95\xb7\x6f\x57\x91\xef\xbb\xe0\xe1\x37" +
	"\x00\x00\xff\xff\x0e\x67\xfe\xed\x51\x01\x00\x00")

func bindataTplFbs20messagegotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplFbs20messagegotpl,
		"_tpl/fbs_20_message.go.tpl",
	)
}



func bindataTplFbs20messagegotpl() (*asset, error) {
	bytes, err := bindataTplFbs20messagegotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/fbs_20_message.go.tpl",
		size: 337,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplProtobuf10headergotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4b\x05\x31\x10\x84\xfb\xfb\x15\x4b\xb0\xf5\x52\xd8\xf9\xb8" +
	"\xc2\xce\x4e\xc1\x1f\x20\xfb\xee\xd6\x35\xbc\x5c\x36\x6e\xf6\x44\x0d\xf9\xef\x62\xe4\xe9\x81\x60\x13\x66\x60\xe6" +
	"\x63\xb2\xde\xc3\xcd\x66\x02\x4c\x89\x14\x8d\x16\x78\x0d\x08\x1c\xec\x79\x3b\x8e\xb3\xac\x7e\x16\xa5\x62\xa2\x14" +
	"\xc4\xe7\x13\xfb\xf2\x12\xfd\xb2\x46\xa6\x34\x94\xf7\x64\xf8\x06\x13\xb8\xac\x62\x72\xe5\x0e\x43\xc6\xf9\x84\x4c" +
	"\x50\xeb\x78\xff\x2d\x5b\x3b\x0c\x61\xcd\xa2\x06\x6e\x87\x65\x61\xf1\xbd\x76\xdc\x9e\xba\xeb\xa6\xab\xb1\x4b\xb7" +
	"\xeb\x89\x70\xa4\xdf\xb8\x85\x95\x8a\xe1\x9a\xff\x26\xff\x19\x6e\xa2\xc8\xe4\xd3\x16\x63\x7f\x7e\xca\x92\x2d\x48" +
	"\x02\x96\xc7\xf3\xfc\x09\xdc\xfe\x07\xee\x30\xd4\xaa\x98\x98\xe0\x42\xb2\x15\xb8\x9e\x60\x7c\x20\x0d\x18\xc3\x07" +
	"\xe9\x2d\xe1\x42\x7a\xd7\x29\x05\x2e\x5b\x3b\x13\x6b\xed\xf1\xaf\x13\xd4\x4a\x69\x69\x6d\xf8\x0c\x00\x00\xff\xff" +
	"\x81\xcf\xcc\x5d\x70\x01\x00\x00")

func bindataTplProtobuf10headergotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplProtobuf10headergotpl,
		"_tpl/protobuf_10_header.go.tpl",
	)
}



func bindataTplProtobuf10headergotpl() (*asset, error) {
	bytes, err := bindataTplProtobuf10headergotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/protobuf_10_header.go.tpl",
		size: 368,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTplProtobuf20messagegotpl = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4b\x03\x31\x10\x85\xcf\xcd\xaf\x78\xf4\xa4\x87\xa6\x78\x2e" +
	"\x3d\xe8\x56\xc5\x8b\x14\xec\x4d\x84\xa6\xed\x74\x09\x24\x99\x25\xc9\x22\x75\x98\xff\x2e\xdb\xa5\xc8\x9e\xbd\xcd" +
	"\x83\xf7\xbe\x84\x6f\xb9\x84\x88\x7d\x4e\xd5\xd7\x8b\x2a\x32\x75\x99\x0a\xa5\x5a\xe0\x50\x7c\x6a\x03\x21\xf3\x37" +
	"\xce\x9c\xb1\x79\x42\x75\x87\x40\xd8\x8b\xd8\xdd\x70\xbd\xbb\x48\xaa\x7b\x8b\xc7\xbe\x32\x5a\x4a\x94\x5d\xa5\x93" +
	"\x35\x91\x4a\x71\x2d\x4d\xd0\x62\x66\x22\x0b\x64\x97\x5a\x82\x6d\x38\xf4\x31\x15\x55\x11\xf8\x33\xde\xca\x8b\xa7" +
	"\x70\xda\xf6\x87\xe0\x8f\xb0\xd7\x00\xd5\x61\xf2\x41\xd9\xbb\xe0\x7f\x28\xef\x2e\x1d\xc1\x0e\x28\x19\x1b\xaa\x58" +
	"\x0f\x61\xcb\x45\x15\x9f\x77\x2d\xb7\xdc\x65\xae\x6c\x8f\x7d\xa9\x1c\x93\x8b\x74\xbf\x9e\x8b\xbc\x72\xe3\x22\x05" +
	"\xdc\x66\x73\x0c\x5f\xf9\x23\x37\xd7\xfa\x8d\xff\xb5\x12\xa1\x74\x1a\x9f\x5f\x60\x3c\xd5\x98\xd1\x55\xc3\x21\xd0" +
	"\xb1\x7a\x4e\x53\x5f\xb1\x0f\xd5\x77\xa3\xaf\xf2\x0f\x61\x13\xbe\x98\x59\xa6\x8e\x86\xd2\x44\xe6\xc6\x55\x87\x35" +
	"\x1e\x56\x46\xcd\x6f\x00\x00\x00\xff\xff\xc5\x5a\x52\x54\xc3\x01\x00\x00")

func bindataTplProtobuf20messagegotplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTplProtobuf20messagegotpl,
		"_tpl/protobuf_20_message.go.tpl",
	)
}



func bindataTplProtobuf20messagegotpl() (*asset, error) {
	bytes, err := bindataTplProtobuf20messagegotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "_tpl/protobuf_20_message.go.tpl",
		size: 451,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1548608970, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"_tpl/10_tables.go.tpl":             bindataTpl10tablesgotpl,
	"_tpl/20_entity.go.tpl":             bindataTpl20entitygotpl,
	"_tpl/30_collection_methods.go.tpl": bindataTpl30collectionmethodsgotpl,
	"_tpl/40_binary.go.tpl":             bindataTpl40binarygotpl,
	"_tpl/90_test.go.tpl":               bindataTpl90testgotpl,
	"_tpl/fbs_10_header.go.tpl":         bindataTplFbs10headergotpl,
	"_tpl/fbs_20_message.go.tpl":        bindataTplFbs20messagegotpl,
	"_tpl/protobuf_10_header.go.tpl":    bindataTplProtobuf10headergotpl,
	"_tpl/protobuf_20_message.go.tpl":   bindataTplProtobuf20messagegotpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"_tpl": {Func: nil, Children: map[string]*bintree{
		"10_tables.go.tpl": {Func: bindataTpl10tablesgotpl, Children: map[string]*bintree{}},
		"20_entity.go.tpl": {Func: bindataTpl20entitygotpl, Children: map[string]*bintree{}},
		"30_collection_methods.go.tpl": {Func: bindataTpl30collectionmethodsgotpl, Children: map[string]*bintree{}},
		"40_binary.go.tpl": {Func: bindataTpl40binarygotpl, Children: map[string]*bintree{}},
		"90_test.go.tpl": {Func: bindataTpl90testgotpl, Children: map[string]*bintree{}},
		"fbs_10_header.go.tpl": {Func: bindataTplFbs10headergotpl, Children: map[string]*bintree{}},
		"fbs_20_message.go.tpl": {Func: bindataTplFbs20messagegotpl, Children: map[string]*bintree{}},
		"protobuf_10_header.go.tpl": {Func: bindataTplProtobuf10headergotpl, Children: map[string]*bintree{}},
		"protobuf_20_message.go.tpl": {Func: bindataTplProtobuf20messagegotpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
